{"version":3,"sources":["components/Layout/Layout/Layout.module.css","constants/URL.js","constants/userGroupConstants.js","constants/groupsConstants.js","store/actions/group-actions.js","constants/userPollConstants.js","components/UI/LoadingSpinner.js","components/UI/Button.js","constants/pollConstants.js","store/actions/poll-actions.js","components/Polls/PollItem.js","components/Polls/PollList.js","components/Polls/Polls.js","components/Groups/GroupItem.js","components/Groups/GroupList.js","pages/AllPollsPage.js","store/actions/userPoll-actions.js","images/about-1.jpeg","images/about-2.jpeg","components/Layout/About/About.js","components/Layout/Header/Header.js","pages/HomePage.js","constants/answerConstants.js","components/Polls/PollForm/PollForm.js","store/actions/answer-actions.js","pages/PollPage.js","constants/userConstants.js","store/actions/user-actions.js","components/UI/Input.js","components/Auth/Login/Login.js","pages/LoginPage.js","components/Auth/Register/Register.js","pages/RegisterPage.js","components/Auth/Profile/Profile.js","pages/ProfilePage.js","components/Polls/PollFinished.js","pages/PollFinishedPage.js","components/Polls/PollFilled.js","pages/PollFilledPage.js","components/Polls/CreatePoll/PollDescritpion.js","components/Polls/CreatePoll/PollOptionAnswer.js","components/Polls/CreatePoll/PollQuestionAnswers.js","components/Polls/CreatePoll/CreatePoll.js","pages/CreatePollPage.js","components/Polls/PollCreated/PollCreated.js","pages/PollCreatedPage.js","pages/UserListScreen.js","components/UI/FormContainer.js","pages/UserEditScreen.js","pages/GroupListScreen.js","pages/GroupEditScreen.js","pages/GroupCreateScreen.js","pages/PollListScreen.js","images/logo-weii.png","components/Layout/Footer/Footer.js","components/Layout/Nav/Navigation.js","components/Layout/Layout/Layout.js","App.js","store/store.js","store/reducers/user-reducer.js","store/reducers/poll-reducer.js","store/reducers/userGroup-reducer.js","store/reducers/userPoll-reducer.js","store/reducers/answer-reducer.js","store/reducers/group-reducer.js","index.js","components/Layout/About/About.module.css","components/Polls/PollForm/PollForm.module.css","components/Auth/Login/Login.module.css","components/Auth/Register/Register.module.css","components/Polls/CreatePoll/PollQuestionAnswers.module.css","components/Auth/Profile/Profile.module.css","components/Layout/Footer/Footer.module.css","components/Layout/Header/Header.module.css","components/Polls/CreatePoll/PollDescription.module.css","components/Polls/CreatePoll/CreatePoll.module.css","components/Polls/PollList.module.css","components/UI/Button.module.css","components/Layout/Nav/Navigation.module.css"],"names":["module","exports","url","USER_GROUP_LIST_REQUEST","USER_GROUP_LIST_SUCCESS","USER_GROUP_LIST_FAIL","USER_GROUP_LIST_RESET","GROUP_LIST_REQUEST","GROUP_LIST_SUCCESS","GROUP_LIST_FAIL","GROUP_LIST_RESET","GROUP_DETAILS_REQUEST","GROUP_DETAILS_SUCCESS","GROUP_DETAILS_FAIL","GROUP_DETAILS_RESET","GROUP_CREATE_REQUEST","GROUP_CREATE_SUCCESS","GROUP_CREATE_FAIL","GROUP_CREATE_RESET","GROUP_UPDATE_REQUEST","GROUP_UPDATE_SUCCESS","GROUP_UPDATE_FAIL","GROUP_UPDATE_RESET","GROUP_DELETE_REQUEST","GROUP_DELETE_SUCCESS","GROUP_DELETE_FAIL","allGroups","dispatch","a","type","axios","get","URL","data","payload","response","message","USER_POLL_LIST_REQUEST","USER_POLL_LIST_SUCCESS","USER_POLL_LIST_FAIL","USER_POLL_LIST_RESET","LoadingSpinner","Spinner","animation","role","style","height","width","margin","display","className","Button","onClick","disabled","children","classes","button","POLL_LIST_REQUEST","POLL_LIST_SUCCESS","POLL_LIST_FAIL","POLL_LIST_RESET","POLL_REQUEST","POLL_SUCCESS","POLL_FAIL","POLL_RESET","POLL_DELETE_REQUEST","POLL_DELETE_SUCCESS","POLL_DELETE_FAIL","POLL_DESCRIPTION_CREATE_POLL_REQUEST","POLL_DESCRIPTION_CREATE_POLL_SUCCESS","POLL_DESCRIPTION_CREATE_POLL_FAIL","POLL_DESCRIPTION_CREATE_POLL_RESET","SENT_CREATED_POLL_REQUEST","SENT_CREATED_POLL_SUCCESS","SENT_CREATED_POLL_FAIL","getPoll","id","downloadReport","name","isAdmin","headers","config","method","responseType","outputFilename","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","Error","PollItem","description","deadline","isFinished","groupName","useDispatch","slice","flexDirection","alignItems","to","PollList","polls","isCompleted","length","Table","striped","bordered","hover","responsive","map","poll","pollName","pollDescription","pollID","Polls","allPolls","availablePolls","filtered","filter","item","randomNumber","Math","floor","random","finishedPolls","textAlign","marginTop","Alert","variant","GroupItem","ListGroup","Item","GroupList","groups","horizontal","group","ID","AllPollsPage","navigate","useNavigate","userInfo","useSelector","state","userLogin","userGroupList","loadingUserGroups","loading","userGroups","userPollList","error","userPolls","useEffect","userGroupsID","forEach","user","push","userGroupsName","userGroupID","groupID","group_name","localStorage","setItem","JSON","stringify","userPollsID","userAvailablePolls","pollsGroups","userPollID","poll_name","poll_description","pollNameGroupID","userPoll","pollGroup","userPollsList","userGroup","tempUserPolls","i","j","splice","groupWithPolls","groupWithPoll","groupWithPollsTemp","listUserPolls","About","about","src","about1","alt","about2","Header","HomePage","SENT_ANSWER_FROM_USER_REQUEST","SENT_ANSWER_FROM_USER_SUCCESS","SENT_ANSWER_FROM_USER_FAIL","ANSWER_BY_POLL_ID_REQUEST","ANSWER_BY_POLL_ID_SUCCESS","ANSWER_BY_POLL_ID_FAIL","ANSWER_BY_POLL_ID_RESET","ANSWER_QUESTION_CREATE_POLL_REQUEST","ANSWER_QUESTION_CREATE_POLL_SUCCESS","ANSWER_QUESTION_CREATE_POLL_FAIL","ANSWER_QUESTION_CREATE_POLL_RESET","QUESTIONS_ANSWERS_CREATE_POLL_REQUEST","QUESTIONS_ANSWERS_CREATE_POLL_SUCCESS","QUESTIONS_ANSWERS_CREATE_POLL_FAIL","QUESTIONS_ANSWERS_CREATE_POLL_RESET","PollForm","pollInfo","poll_info","questionsAndAnswers","questions_answers","pollId","useParams","testArray","useState","array","question","is_multi_choice","answers","setArrayToAnswers","tempAnswers","setTempAnswers","addAnswer","questionType","index","answer","Form","Check","required","value","answer_text","label","FloatingLabel","controlId","Control","as","placeholder","contentQuestionAnswer","questionAndAnswer","Object","entries","key","checkQuestionType","question_text","onChange","e","tempArray","target","isChecked","checked","indexItem","changeInputValueHandler","onSubmit","preventDefault","isEmptyForm","isEmpty","Array","isArray","keys","checkAnswersIsEmpty","tmpArray","getState","Authorization","token","put","sentAnswersFromUser","PollPage","pollForm","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","getUserDetails","detail","listUsers","Input","forwardRef","ref","input","htmlFor","Login","setMessage","emailInputRef","useRef","passwordInputRef","replace","form","email","password","current","post","info","LoginPage","Register","location","useLocation","nameInputRef","confirmPasswordInputRef","redirect","search","split","userRegister","RegisterPage","Profile","setName","setEmail","setPassword","confirmPassword","setConfirmPassword","userDetails","success","userUpdateProfile","updateUserProfile","ProfilePage","PollFinished","PollFinishedPage","PollFilled","isMarked","openAnswer","dateAnswer","PollFilledPage","PollDescription","isSaved","setIsSaved","isClickedEverybodyCheckbox","setisClickedEverybodyCheckbox","isClickedAnotherCheckbox","setisClickedAnotherCheckbox","groupList","setGroups","namePollInputRef","descriptionPollInputRef","deadlinePollInputRef","allGroupList","getGroupFromInput","findIndex","groupObject","checkClickedCheckbox","Card","Body","Group","inline","min","Date","toISOString","pollDeadline","pollDescriptionCreatePoll","PollOptionAnswer","typeAnswer","onRemoveOptionAnswer","answerInputValue","setAnswerInputValue","answersQuestion","answersCreatePoll","changeValueHandler","useCallback","blurValueHandler","idArray","answerItem","answerText","getAnswersQuestionCreatePoll","contentOptionAnswer","setContentOptionAnswer","checkTypeAnswer","content","isSingleChoice","Label","onBlur","marginLeft","isMultiChoice","isOpen","isDateChoice","PollQuestionAnswers","questionAnswerID","onRemoveQuestionWithAnswers","questionsAnswers","allQuestionsAnswersCreatePoll","setTypeAnswer","selectedTypeAnswer","setSelectedTypeAnswer","setAnswers","questionInputRef","removeOptionAnswerHandler","defaultAmountOfAnswers","answersArray","addOptionToAnswerHandler","Select","typeAnswerTemp","questionValue","isRepeated","questionAndAnswers","newQuestionAnswersObject","questionsAndAnswersArray","getQuestionsAnswersCreatePoll","CreatePoll","setQuestionsAndAnswers","removeQuestionWithAnswersHandler","newPoll","sentNewPoll","questionsAndAnswersTemp","CreatePollPage","PollCreated","sentPoll","PollCreatedPage","UserListScreen","searchEmail","setSearchEmail","userList","users","successDelete","userDelete","deleteHandler","window","confirm","delete","deleteUser","Container","val","toLowerCase","includes","color","FormContainer","Row","Col","xs","md","UserEditScreen","userId","setIsAdmin","setUserGroups","loadingAllGroupList","userUpdate","errorUpdate","loadingUpdate","successUpdate","checkUserGroupBelong","groupsTempp","userGroupsTemp","groupsTemp","userGroupBelong","isBelong","Number","updateUser","parseInt","setNewUserGroups","GroupListScreen","searchGroup","setSearchGroup","loadingUserList","groupDelete","loadingDelete","errorDelete","deleteGroup","some","username","GroupEditScreen","groupId","groupDetails","groupUpdate","updateGroup","GroupCreateScreen","searchUser","setSearchUser","usersGroup","setUsersGroup","groupCreate","loadingCreate","errorCreate","successCreate","fill","addUsersToGroup","tempUsersGroup","tempUsers","marginBottom","position","updatedUsersGroup","handleOnChange","PollListScreen","searchPoll","setSearchPoll","pollList","pollDelete","questions","deletePoll","justifyContent","marginRight","padding","is_single_choice","is_marked","is_open","open_answer","is_date_choice","date_answer","displayAnswers","Footer","logoWeii","authors","Navigation","isEmployee","setIsEmployee","Navbar","expand","collapseOnSelect","Brand","Toggle","Collapse","Nav","NavDropdown","title","removeItem","Link","Layout","page","App","path","element","reducer","combineReducers","action","answersByPollId","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8f8d9286.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Layout_page__1NpLZ\"};","const url = 'https://polls-app-project.herokuapp.com';\r\nexport default url;","export const USER_GROUP_LIST_REQUEST = 'USER_GROUP_LIST_REQUEST'\r\nexport const USER_GROUP_LIST_SUCCESS = 'USER_GROUP_LIST_SUCCESS'\r\nexport const USER_GROUP_LIST_FAIL = 'USER_GROUP_LIST_FAIL'\r\nexport const USER_GROUP_LIST_RESET = 'USER_GROUP_LIST_RESET'","export const GROUP_LIST_REQUEST = 'GROUP_LIST_REQUEST'\r\nexport const GROUP_LIST_SUCCESS = 'GROUP_LIST_SUCCESS'\r\nexport const GROUP_LIST_FAIL = 'GROUP_LIST_FAIL'\r\nexport const GROUP_LIST_RESET = 'GROUP_LIST_RESET'\r\n\r\nexport const GROUP_DETAILS_REQUEST = 'GROUP_DETAILS_REQUEST'\r\nexport const GROUP_DETAILS_SUCCESS = 'GROUP_DETAILS_SUCCESS'\r\nexport const GROUP_DETAILS_FAIL = 'GROUP_DETAILS_FAIL'\r\nexport const GROUP_DETAILS_RESET = 'GROUP_DETAILS_RESET'\r\n\r\nexport const GROUP_CREATE_REQUEST = 'GROUP_CREATE_REQUEST'\r\nexport const GROUP_CREATE_SUCCESS = 'GROUP_CREATE_SUCCESS'\r\nexport const GROUP_CREATE_FAIL = 'GROUP_CREATE_FAIL'\r\nexport const GROUP_CREATE_RESET = 'GROUP_CREATE_RESET'\r\n\r\n\r\nexport const GROUP_UPDATE_REQUEST = 'GROUP_UPDATE_REQUEST'\r\nexport const GROUP_UPDATE_SUCCESS = 'GROUP_UPDATE_SUCCESS'\r\nexport const GROUP_UPDATE_FAIL = 'GROUP_UPDATE_FAIL'\r\nexport const GROUP_UPDATE_RESET = 'GROUP_UPDATE_RESET'\r\n\r\nexport const GROUP_DELETE_REQUEST = 'GROUP_DELETE_REQUEST'\r\nexport const GROUP_DELETE_SUCCESS = 'GROUP_DELETE_SUCCESS'\r\nexport const GROUP_DELETE_FAIL = 'GROUP_DELETE_FAIL'\r\n","import axios from 'axios';\r\nimport URL from '../../constants/URL';\r\nimport {\r\n  USER_GROUP_LIST_REQUEST,\r\n  USER_GROUP_LIST_SUCCESS,\r\n  USER_GROUP_LIST_FAIL,\r\n} from \"../../constants/userGroupConstants\";\r\n\r\nimport {\r\n  GROUP_LIST_REQUEST,\r\n  GROUP_LIST_SUCCESS,\r\n  GROUP_LIST_FAIL,\r\n  GROUP_LIST_RESET,\r\n\r\n  GROUP_DETAILS_REQUEST,\r\n  GROUP_DETAILS_SUCCESS,\r\n  GROUP_DETAILS_FAIL,\r\n  GROUP_DETAILS_RESET,\r\n\r\n  GROUP_CREATE_REQUEST,\r\n  GROUP_CREATE_SUCCESS,\r\n  GROUP_CREATE_FAIL,\r\n  GROUP_CREATE_RESET,\r\n\r\n  GROUP_UPDATE_REQUEST,\r\n  GROUP_UPDATE_SUCCESS,\r\n  GROUP_UPDATE_FAIL,\r\n  GROUP_UPDATE_RESET,\r\n\r\n  GROUP_DELETE_REQUEST,\r\n  GROUP_DELETE_SUCCESS,\r\n  GROUP_DELETE_FAIL\r\n\r\n} from \"../../constants/groupsConstants\"\r\n\r\nexport const listUserGroups = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_GROUP_LIST_REQUEST })\r\n\r\n    const { data: userGroups } = await axios.get(`${URL}/api/user-groups`);\r\n\r\n    const userGroupsID = []\r\n\r\n    userGroups.forEach(item => {\r\n      if (item.user === id) {\r\n        userGroupsID.push(item.group);\r\n      }\r\n    });\r\n\r\n    const { data: groups } = await axios.get(`${URL}/api/groups`);\r\n\r\n    const userGroupsName = []\r\n\r\n    groups.forEach(group => {\r\n      userGroupsID.forEach((userGroupID) => {\r\n        if (group.ID === userGroupID) {\r\n          userGroupsName.push({\r\n            groupID: group.ID,\r\n            groupName: group.group_name\r\n          });\r\n        }\r\n      })\r\n\r\n    })\r\n\r\n\r\n    localStorage.setItem('userGroups', JSON.stringify(userGroupsName))\r\n\r\n    dispatch({\r\n      type: USER_GROUP_LIST_SUCCESS,\r\n      payload: userGroupsName\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_GROUP_LIST_FAIL,\r\n      payload: error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const getGroupDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: GROUP_DETAILS_REQUEST })\r\n\r\n    const { data } = await axios.get(`${URL}/api/groups/${id}/`)\r\n\r\n    dispatch({\r\n      type: GROUP_DETAILS_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GROUP_DETAILS_FAIL,\r\n      payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const allGroups = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: GROUP_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get(`${URL}/api/groups`);\r\n\r\n\r\n    dispatch({\r\n      type: GROUP_LIST_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GROUP_LIST_FAIL,\r\n      payload: error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const deleteGroup = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: GROUP_DELETE_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    await axios.delete(\r\n      `${URL}/api/groups/delete/${id}/`,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: GROUP_DELETE_SUCCESS,\r\n    })\r\n\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GROUP_DELETE_FAIL,\r\n      payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createGroup = (group) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: GROUP_CREATE_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n\r\n\r\n    await axios.post(\r\n      `/${URL}api/groups/create`,\r\n      group,\r\n      config\r\n    )\r\n    dispatch({\r\n      type: GROUP_CREATE_SUCCESS,\r\n    })\r\n\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GROUP_CREATE_FAIL,\r\n      payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const updateGroup = (group) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: GROUP_UPDATE_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `${URL}/api/groups/update/${group.id}/`,\r\n      group,\r\n      config\r\n    )\r\n    dispatch({\r\n      type: GROUP_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n\r\n    dispatch({\r\n      type: GROUP_DETAILS_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GROUP_UPDATE_FAIL,\r\n      payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\n","export const USER_POLL_LIST_REQUEST = 'USER_POLL_LIST_REQUEST'\r\nexport const USER_POLL_LIST_SUCCESS = 'USER_POLL_LIST_SUCCESS'\r\nexport const USER_POLL_LIST_FAIL = 'USER_POLL_LIST_FAIL'\r\nexport const USER_POLL_LIST_RESET = 'USER_POLL_LIST_RESET'","import { Spinner } from 'react-bootstrap'\n\nconst LoadingSpinner = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        height: '100px',\n        width: '100px',\n        margin: 'auto',\n        display: 'block'\n      }}\n    >\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default LoadingSpinner;\n","import classes from './Button.module.css'\r\n\r\nconst Button = ({ type, onClick, disabled, className, children, style }) => {\r\n  return <button\r\n    type={type || 'button'}\r\n    className={className ? className : classes.button}\r\n    onClick={onClick}\r\n    disabled={disabled || false}\r\n    style={{ margin: '0 auto' }}\r\n  >\r\n    {children}\r\n  </button>\r\n}\r\n\r\nexport default Button;","export const POLL_LIST_REQUEST = 'POLL_LIST_REQUEST'\r\nexport const POLL_LIST_SUCCESS = 'POLL_LIST_SUCCESS'\r\nexport const POLL_LIST_FAIL = 'POLL_LIST_FAIL'\r\nexport const POLL_LIST_RESET = 'POLL_LIST_RESET'\r\n\r\n\r\nexport const POLL_REQUEST = 'POLL_REQUEST'\r\nexport const POLL_SUCCESS = 'POLL_SUCCESS'\r\nexport const POLL_FAIL = 'POLL_FAIL'\r\nexport const POLL_RESET = 'POLL_RESET'\r\n\r\nexport const POLL_DELETE_REQUEST = 'POLL_DELETE_REQUEST'\r\nexport const POLL_DELETE_SUCCESS = 'POLL_DELETE_SUCCESS'\r\nexport const POLL_DELETE_FAIL = 'POLL_DELETE_FAIL'\r\n\r\nexport const POLL_DESCRIPTION_CREATE_POLL_REQUEST = 'POLL_DESCRIPTION_CREATE_POLL_REQUEST'\r\nexport const POLL_DESCRIPTION_CREATE_POLL_SUCCESS = 'POLL_DESCRIPTION_CREATE_POLL_SUCCESS'\r\nexport const POLL_DESCRIPTION_CREATE_POLL_FAIL = 'POLL_DESCRIPTION_CREATE_POLL_FAIL'\r\nexport const POLL_DESCRIPTION_CREATE_POLL_RESET = 'POLL_DESCRIPTION_CREATE_POLL_RESET'\r\n\r\nexport const SENT_CREATED_POLL_REQUEST = 'SENT_CREATED_POLL_REQUEST'\r\nexport const SENT_CREATED_POLL_SUCCESS = 'SENT_CREATED_POLL_SUCCESS'\r\nexport const SENT_CREATED_POLL_FAIL = 'SENT_CREATED_POLL_FAIL'\r\nexport const SENT_CREATED_POLL_RESET = 'SENT_CREATED_POLL_RESET'\r\n\r\nexport const DOWNLOAD_REPORT_POLL_REQUEST = 'DOWNLOAD_REPORT_POLL_REQUEST'\r\nexport const DOWNLOAD_REPORT_POLL_SUCCESS = 'DOWNLOAD_REPORT_POLL_SUCCESS'\r\nexport const DOWNLOAD_REPORT_POLL_FAIL = 'DOWNLOAD_REPORT_POLL_FAIL'\r\nexport const DOWNLOAD_REPORT_POLL_RESET = 'DOWNLOAD_REPORT_POLL_RESET'\r\n\r\n\r\n","import axios from 'axios';\r\nimport url from '../../constants/URL';\r\nimport {\r\n  POLL_LIST_REQUEST,\r\n  POLL_LIST_SUCCESS,\r\n  POLL_LIST_FAIL,\r\n\r\n  POLL_REQUEST,\r\n  POLL_SUCCESS,\r\n  POLL_FAIL,\r\n\r\n  POLL_DESCRIPTION_CREATE_POLL_REQUEST,\r\n  POLL_DESCRIPTION_CREATE_POLL_SUCCESS,\r\n  POLL_DESCRIPTION_CREATE_POLL_FAIL,\r\n\r\n  SENT_CREATED_POLL_REQUEST,\r\n  SENT_CREATED_POLL_SUCCESS,\r\n  SENT_CREATED_POLL_FAIL,\r\n\r\n  DOWNLOAD_REPORT_POLL_REQUEST,\r\n  DOWNLOAD_REPORT_POLL_SUCCESS,\r\n  DOWNLOAD_REPORT_POLL_FAIL,\r\n\r\n  POLL_DELETE_REQUEST,\r\n  POLL_DELETE_SUCCESS,\r\n  POLL_DELETE_FAIL\r\n} from '../../constants/pollConstants';\r\n\r\n\r\nexport const listPolls = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: POLL_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get(`${url}/api/polls/all-data`);\r\n\r\n    const polls = [];\r\n\r\n    for (const key in data) {\r\n      polls.push({\r\n        id: data[key].poll.ID,\r\n        name: data[key].poll.poll_name,\r\n        description: data[key].poll.poll_description,\r\n        deadline: data[key].poll.deadline,\r\n        isFinished: data[key].poll.isFinished,\r\n        groups: data[key].groups,\r\n        user: data[key].user,\r\n        questions: data[key].questions,\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: POLL_LIST_SUCCESS,\r\n      payload: polls\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POLL_LIST_FAIL,\r\n      payload: error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const getPoll = (id) => async (dispatch) => {\r\n\r\n  try {\r\n\r\n    dispatch({ type: POLL_REQUEST });\r\n\r\n    const { data } = await axios.get(`${url}/api/polls/${id}`);\r\n\r\n    dispatch({\r\n      type: POLL_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POLL_FAIL,\r\n      payload: error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const pollDescriptionCreatePoll = (pollDescription) => async (dispatch) => {\r\n\r\n  try {\r\n\r\n    dispatch({ type: POLL_DESCRIPTION_CREATE_POLL_REQUEST });\r\n\r\n\r\n    dispatch({\r\n      type: POLL_DESCRIPTION_CREATE_POLL_SUCCESS,\r\n      payload: pollDescription\r\n    })\r\n\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POLL_DESCRIPTION_CREATE_POLL_FAIL,\r\n      payload: error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const deletePoll = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: POLL_DELETE_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    await axios.delete(\r\n      `${url}/api/polls/delete/${id}/`,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: POLL_DELETE_SUCCESS,\r\n    })\r\n\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POLL_DELETE_FAIL,\r\n      payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const sentNewPoll = (pollDescription, questionsAndAnswers) => async (dispatch) => {\r\n\r\n  try {\r\n    dispatch({ type: SENT_CREATED_POLL_REQUEST });\r\n\r\n\r\n    const newPoll = {\r\n      pollDescription,\r\n      questionsAndAnswers\r\n    }\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      }\r\n    }\r\n\r\n    await axios.post(\r\n      `${url}/api/polls/created-poll`,\r\n      { newPoll: newPoll },\r\n      config\r\n    )\r\n\r\n    dispatch({ type: SENT_CREATED_POLL_SUCCESS })\r\n\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SENT_CREATED_POLL_FAIL,\r\n      payload: error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const downloadReport = (name, isAdmin) => async (dispatch) => {\r\n\r\n  try {\r\n    dispatch({ type: DOWNLOAD_REPORT_POLL_REQUEST })\r\n\r\n    const headers = { 'Content-Type': 'blob' };\r\n    const config = !isAdmin ? {\r\n      method: 'GET', url: `${url}/api/polls/report/${name}`\r\n      , responseType: 'arraybuffer', headers\r\n    } :\r\n      {\r\n        method: 'GET', url: `${url}/api/polls/admin/report/${name}`\r\n        , responseType: 'arraybuffer', headers\r\n      }\r\n      ;\r\n\r\n    try {\r\n      const { data } = await axios(config)\r\n\r\n      const outputFilename = `Raport_ankieta_${name}.xlsx`;\r\n      const url = URL.createObjectURL(new Blob([data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', outputFilename);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n\r\n    } catch (error) {\r\n      throw Error(error);\r\n    }\r\n\r\n\r\n    dispatch({ type: DOWNLOAD_REPORT_POLL_SUCCESS })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DOWNLOAD_REPORT_POLL_FAIL,\r\n      payload: error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    })\r\n  }\r\n}\r\n","import { useDispatch } from 'react-redux'\r\nimport Button from '../UI/Button'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { downloadReport } from '../../store/actions/poll-actions';\r\n\r\nconst PollItem = ({ name, description, deadline, id, isFinished, groupName }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const downloadReportHandler = () => {\r\n    dispatch(downloadReport(name, false));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <td>{name}</td>\r\n      <td>{description}</td>\r\n      <td>\r\n        <p>{deadline.slice(0, 10)}</p>\r\n        <p>{deadline.slice(11, 19)}</p>\r\n      </td>\r\n      <td>{groupName}</td>\r\n      {!isFinished\r\n        ?\r\n        <td>\r\n          <LinkContainer to={`/polls/${id}`}>\r\n            <Button style={{ margin: '0 auto' }}>\r\n              Wypełnij\r\n            </Button>\r\n          </LinkContainer>\r\n        </td>\r\n        :\r\n        <>\r\n          <td style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n            <LinkContainer to={`/polls/${id}/filled-poll`}>\r\n              <Button style={{ margin: '0 auto' }}>\r\n                Zobacz\r\n              </Button>\r\n            </LinkContainer>\r\n          </td>\r\n\r\n          <td style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}> <Button style={{ margin: '0 auto' }} onClick={downloadReportHandler}>Raport</Button></td>\r\n        </>\r\n      }\r\n    </>)\r\n}\r\n\r\nexport default PollItem;","import PollItem from \"./PollItem\";\r\nimport { Table } from 'react-bootstrap'\r\n\r\nconst PollList = ({ groupName, polls, isCompleted }) => {\r\n\r\n  return (\r\n    polls.length !== 0 &&\r\n\r\n    <Table striped bordered hover responsive className='table-sm'>\r\n      <thead>\r\n        <tr>\r\n          <th>NAZWA</th>\r\n          <th>OPIS</th>\r\n          <th>TERMIN</th>\r\n          <th>GRUPY</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {polls.map(poll =>\r\n          <tr key={poll.pollID}>\r\n\r\n            <PollItem\r\n              key={poll.pollID}\r\n              name={poll.pollName}\r\n              description={poll.pollDescription}\r\n              deadline={poll.deadline}\r\n              isFinished={poll.isFinished}\r\n              id={poll.pollID}\r\n              groupName={groupName}\r\n            />\r\n\r\n          </tr>\r\n        )\r\n        }\r\n      </tbody>\r\n    </Table>\r\n  )\r\n}\r\n\r\nexport default PollList;","import classes from './PollList.module.css'\r\nimport { Alert } from 'react-bootstrap';\r\nimport PollList from \"./PollList\";\r\n\r\nconst Polls = ({ polls }) => {\r\n\r\n  const allPolls = [...polls];\r\n\r\n  const availablePolls = allPolls.map((poll => {\r\n\r\n    const filtered = poll.polls.filter(item => !item.isFinished)\r\n    const randomNumber = Math.floor(Math.random() * 1000);\r\n\r\n    if (filtered.length) {\r\n      return <PollList key={randomNumber} groupName={poll.groupName} polls={filtered} isCompleted={false} />\r\n    }\r\n    return false\r\n  }))\r\n\r\n  const finishedPolls = allPolls.map((poll => {\r\n    const randomNumber = Math.floor(Math.random() * 1000);\r\n    const filtered = poll.polls.filter(item => item.isFinished)\r\n    if (filtered.length) {\r\n      return <PollList key={randomNumber} groupName={poll.groupName} polls={filtered} isCompleted={true} />\r\n    }\r\n    return false\r\n  }))\r\n\r\n  return (\r\n    <div className={classes[\"selected-polls\"]}>\r\n      <h2 style={{ textAlign: 'center', marginTop: '10px' }}>Dostępne ankiety:</h2>\r\n      {availablePolls[0] !== false && availablePolls.length ? availablePolls : <Alert variant=\"info\">\r\n        Brak dostępnych ankiet\r\n      </Alert >}\r\n      <h2 style={{ textAlign: 'center' }}>Zakończone ankiety:</h2>\r\n      {finishedPolls[0] !== false && finishedPolls.length ? finishedPolls : <Alert variant=\"info\">\r\n        Brak zakończonych ankiet\r\n      </Alert >}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Polls;","import { ListGroup } from \"react-bootstrap\";\r\n\r\n\r\nconst GroupItem = ({ name }) => {\r\n  return <ListGroup.Item>\r\n    {name}\r\n  </ListGroup.Item>\r\n}\r\n\r\nexport default GroupItem;","import GroupItem from \"./GroupItem\";\r\nimport { ListGroup, Alert } from \"react-bootstrap\";\r\n\r\n\r\nconst GroupList = ({ groups }) => {\r\n\r\n  return <ListGroup horizontal>\r\n    {groups.map((group) => {\r\n      if (group.groupName !== 'Wszyscy') {\r\n        return <GroupItem\r\n          key={group.ID}\r\n          name={group.groupName}\r\n        />\r\n      } else if (group.groupName === 'Wszyscy' && groups.length === 1) {\r\n        const randomNumber = Math.floor(Math.random() * 100000)\r\n        return (\r\n          <Alert key={randomNumber} variant=\"info\" style={{ width: '100%', textAlign: 'center' }}>\r\n            Nie należysz do żadnej z grup\r\n          </Alert >\r\n        )\r\n      }\r\n    })\r\n    }\r\n  </ListGroup>\r\n}\r\n\r\nexport default GroupList;","import { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listUserGroups } from \"../store/actions/group-actions\";\r\nimport { listUserPolls } from \"../store/actions/userPoll-actions\";\r\n\r\n\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\r\nimport Polls from \"../components/Polls/Polls\";\r\nimport GroupList from \"../components/Groups/GroupList\";\r\n\r\nconst AllPollsPage = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userGroupList = useSelector(state => state.userGroupList);\r\n  const { loading: loadingUserGroups, userGroups } = userGroupList;\r\n\r\n  const userPollList = useSelector(state => state.userPollList);\r\n  const { error, userPolls, loading } = userPollList;\r\n\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      navigate('/login')\r\n    } else {\r\n      dispatch(listUserGroups(userInfo.id));\r\n    }\r\n\r\n  }, [dispatch, userInfo, navigate])\r\n\r\n\r\n  useEffect(() => {\r\n    if (userGroups.length && userInfo) {\r\n      dispatch(listUserPolls(userInfo.id, userGroups))\r\n    }\r\n  }, [dispatch, userInfo, userGroups])\r\n\r\n\r\n\r\n  return <>\r\n    {\r\n      loading || loadingUserGroups ? <LoadingSpinner />\r\n        : error ? <h2>Błąd: {error}</h2>\r\n          :\r\n          <>\r\n            <h3 style={{ textAlign: 'center' }}>Należysz do grup:</h3>\r\n            <GroupList groups={userGroups} />\r\n\r\n\r\n            <Polls polls={userPolls} />\r\n          </>\r\n    }\r\n  </>\r\n}\r\n\r\nexport default AllPollsPage;","import axios from 'axios';\r\nimport URL from '../../constants/URL';\r\nimport {\r\n  USER_POLL_LIST_REQUEST,\r\n  USER_POLL_LIST_SUCCESS,\r\n  USER_POLL_LIST_FAIL,\r\n} from \"../../constants/userPollConstants\";\r\n\r\n\r\nexport const listUserPolls = (id, userGroups) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_POLL_LIST_REQUEST })\r\n\r\n    const { data: userPolls } = await axios.get(`${URL}/api/user-polls`);\r\n\r\n    const userPollsID = []\r\n\r\n    userPolls.forEach(item => {\r\n      if (item.user === id) {\r\n        userPollsID.push(item.poll);\r\n      }\r\n    });\r\n\r\n\r\n    const { data: polls } = await axios.get(`${URL}/api/polls`);\r\n\r\n\r\n    const userAvailablePolls = []\r\n\r\n    const { data: pollsGroups } = await axios.get(`${URL}/api/polls-groups`);\r\n\r\n\r\n    polls.forEach(poll => {\r\n      userPollsID.forEach((userPollID) => {\r\n        if (poll.ID === userPollID) {\r\n          userAvailablePolls.push({\r\n            pollID: poll.ID,\r\n            pollName: poll.poll_name,\r\n            pollDescription: poll.poll_description,\r\n            deadline: poll.deadline,\r\n            isFinished: poll.isFinished\r\n          });\r\n        }\r\n      })\r\n\r\n    })\r\n\r\n\r\n\r\n    const pollNameGroupID = []\r\n\r\n    userAvailablePolls.forEach(userPoll => {\r\n      pollsGroups.forEach(pollGroup => {\r\n        if (userPoll.pollID === pollGroup.poll) {\r\n          pollNameGroupID.push({\r\n            groupID: pollGroup.group,\r\n            pollID: userPoll.pollID,\r\n            pollName: userPoll.pollName,\r\n            pollDescription: userPoll.pollDescription,\r\n            deadline: userPoll.deadline,\r\n            isFinished: userPoll.isFinished\r\n          })\r\n        }\r\n      })\r\n    })\r\n\r\n\r\n    const userPollsList = [];\r\n\r\n    pollNameGroupID.forEach(pollGroup => {\r\n      userGroups.forEach(userGroup => {\r\n        if (pollGroup.groupID === userGroup.groupID) {\r\n          userPollsList.push({\r\n            groupName: userGroup.groupName,\r\n            pollID: pollGroup.pollID,\r\n            pollName: pollGroup.pollName,\r\n            pollDescription: pollGroup.pollDescription,\r\n            deadline: pollGroup.deadline,\r\n            isFinished: pollGroup.isFinished\r\n          })\r\n        }\r\n      })\r\n    })\r\n\r\n\r\n    const tempUserPolls = [...userPollsList]\r\n\r\n    for (let i = 0; i < tempUserPolls.length; i++) {\r\n      for (let j = i + 1; j < tempUserPolls.length; j++) {\r\n        if (tempUserPolls[i].pollID === tempUserPolls[j].pollID) {\r\n          tempUserPolls.splice(j, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    const groupWithPolls = [];\r\n\r\n    tempUserPolls.forEach(userPoll => {\r\n\r\n      if (!groupWithPolls.length) {\r\n        const poll = {\r\n          groupName: userPoll.groupName,\r\n          polls: [\r\n            {\r\n              pollID: userPoll.pollID,\r\n              pollName: userPoll.pollName,\r\n              pollDescription: userPoll.pollDescription,\r\n              deadline: userPoll.deadline,\r\n              isFinished: userPoll.isFinished\r\n            }\r\n          ]\r\n        };\r\n        groupWithPolls.push(poll);\r\n      }\r\n\r\n      else {\r\n\r\n        groupWithPolls.forEach(groupWithPoll => {\r\n\r\n          if (userPoll.groupName !== groupWithPoll.groupName) {\r\n            const poll = {\r\n              groupName: userPoll.groupName,\r\n              polls: [\r\n                {\r\n                  pollID: userPoll.pollID,\r\n                  pollName: userPoll.pollName,\r\n                  pollDescription: userPoll.pollDescription,\r\n                  deadline: userPoll.deadline,\r\n                  isFinished: userPoll.isFinished\r\n                }\r\n              ]\r\n            };\r\n            groupWithPolls.push(poll);\r\n          }\r\n\r\n          else if (userPoll.groupName === groupWithPoll.groupName) {\r\n\r\n            groupWithPoll.polls.forEach(item => {\r\n              if (userPoll.pollID !== item.pollID) {\r\n                groupWithPoll.polls.push({\r\n                  pollID: userPoll.pollID,\r\n                  pollName: userPoll.pollName,\r\n                  pollDescription: userPoll.pollDescription,\r\n                  deadline: userPoll.deadline,\r\n                  isFinished: userPoll.isFinished\r\n                })\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n    for (let i = 0; i < groupWithPolls.length; i++) {\r\n      for (let j = i + 1; j < groupWithPolls.length; j++) {\r\n        if (groupWithPolls[i].groupName === groupWithPolls[j].groupName) {\r\n          groupWithPolls[j] = '';\r\n        }\r\n      }\r\n    }\r\n\r\n    const groupWithPollsTemp = groupWithPolls.filter(item => item !== \"\")\r\n\r\n    groupWithPollsTemp.forEach(poll => {\r\n      for (let i = 0; i < poll.polls.length; i++) {\r\n        for (let j = i + 1; j < poll.polls.length; j++) {\r\n          if (poll.polls[i].pollID === poll.polls[j].pollID) {\r\n            poll.polls[j] = '';\r\n          }\r\n        }\r\n      }\r\n      poll.polls = poll.polls.filter(poll => poll !== \"\")\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_POLL_LIST_SUCCESS,\r\n      payload: groupWithPollsTemp\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_POLL_LIST_FAIL,\r\n      payload: error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    })\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/about-1.a9afc77f.jpeg\";","export default __webpack_public_path__ + \"static/media/about-2.8f11309b.jpeg\";","import classes from './About.module.css'\r\n\r\nimport about1 from '../../../images/about-1.jpeg'\r\nimport about2 from '../../../images/about-2.jpeg'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className={classes.about}>\r\n      <div className={classes[\"about-1\"]}>\r\n        <p className={classes[\"about-text-1\"]}>\r\n          Zapoznaj się z opinią innych na wybrany przez ciebie temat lub wyraź swoją opinię wypełniając\r\n          utworzone\r\n          przez innych użytkowników ankiety.\r\n        </p>\r\n\r\n        <div className={classes[\"about-image-1\"]}>\r\n          <img src={about1} alt=\"about1\" />\r\n        </div>\r\n\r\n        <p className={classes[\"about-text-2\"]}>\r\n          Ankiety mogą zawierać pytania jedno/wielo-krotnego wyboru, odpowiedzi w formie krótkiej wypowiedzi\r\n          pisemnej,\r\n          a także i obrazki.\r\n        </p>\r\n\r\n        <div className={classes[\"about-text\"]}>\r\n          <p className={classes[\"about-text-p1\"]}>\r\n            Zapoznaj się z opinią innych na wybrany przez ciebie temat lub wyraź swoją opinię wypełniając\r\n            utworzone\r\n            przez innych użytkowników ankiety.\r\n          </p>\r\n\r\n          <p className={classes[\"about-text-p2\"]}>\r\n            Ankiety mogą zawierać pytania jedno/wielo-krotnego wyboru, odpowiedzi w formie krótkiej\r\n            wypowiedzi\r\n            pisemnej,\r\n            a także i obrazki.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={classes[\"about-2\"]}>\r\n        <p className={classes[\"about-text-1\"]}>\r\n          Jako autor ankiety masz dostęp do danych zebranych podczas udzielania odpowiedzi przez innych\r\n          użytkowników.\r\n        </p>\r\n\r\n        <div className={classes[\"about-image-2\"]}>\r\n          <img src={about2} alt=\"about2\" />\r\n        </div>\r\n\r\n        <p className={classes[\"about-text-2\"]}>\r\n          Dane te są przedstawiane w postaci generowanych raportów, z których wynika m.in jaką odpowiedź na\r\n          dane\r\n          pytanie wybrała większość osób.\r\n        </p>\r\n\r\n        <div className={classes[\"about-text\"]}>\r\n          <p className={classes[\"about-text-p1\"]}>\r\n            Jako autor ankiety masz dostęp do danych zebranych podczas udzielania odpowiedzi przez innych\r\n            użytkowników.\r\n          </p>\r\n\r\n          <p className={classes[\"about-text-p2\"]}>\r\n            Dane te są przedstawiane w postaci generowanych raportów, z których wynika m.in jaką odpowiedź\r\n            na\r\n            dane\r\n            pytanie wybrała większość osób.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About;","import classes from './Header.module.css'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <div className={classes[\"header-container\"]}>\r\n        <div className={classes[\"header-content\"]}>\r\n          <h1>Tworzenie własnych ankiet z możliwością generowania raportów</h1>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import About from '../components/Layout/About/About'\r\nimport Header from \"../components/Layout/Header/Header\";\r\n\r\nconst HomePage = () => {\r\n  return <>\r\n    <Header />\r\n    <About />\r\n  </>\r\n}\r\n\r\nexport default HomePage;","export const SENT_ANSWER_FROM_USER_REQUEST = 'SENT_ANSWER_FROM_USER_REQUEST'\r\nexport const SENT_ANSWER_FROM_USER_SUCCESS = 'SENT_ANSWER_FROM_USER_SUCCESS'\r\nexport const SENT_ANSWER_FROM_USER_FAIL = 'SENT_ANSWER_FROM_USER_FAIL'\r\n\r\nexport const ANSWER_BY_POLL_ID_REQUEST = 'ANSWER_BY_POLL_ID_REQUEST'\r\nexport const ANSWER_BY_POLL_ID_SUCCESS = 'ANSWER_BY_POLL_ID_SUCCESS'\r\nexport const ANSWER_BY_POLL_ID_FAIL = 'ANSWER_BY_POLL_ID_FAIL'\r\nexport const ANSWER_BY_POLL_ID_RESET = 'ANSWER_BY_POLL_ID_RESET'\r\n\r\nexport const ANSWER_QUESTION_CREATE_POLL_REQUEST = 'ANSWER_QUESTION_CREATE_POLL_REQUEST'\r\nexport const ANSWER_QUESTION_CREATE_POLL_SUCCESS = 'ANSWER_QUESTION_CREATE_POLL_SUCCESS'\r\nexport const ANSWER_QUESTION_CREATE_POLL_FAIL = 'ANSWER_QUESTION_CREATE_POLL_FAIL'\r\nexport const ANSWER_QUESTION_CREATE_POLL_RESET = 'ANSWER_QUESTION_CREATE_POLL_RESET'\r\n\r\nexport const QUESTIONS_ANSWERS_CREATE_POLL_REQUEST = 'QUESTIONS_ANSWERS_CREATE_POLL_REQUEST'\r\nexport const QUESTIONS_ANSWERS_CREATE_POLL_SUCCESS = 'QUESTIONS_ANSWERS_CREATE_POLL_SUCCESS'\r\nexport const QUESTIONS_ANSWERS_CREATE_POLL_FAIL = 'QUESTIONS_ANSWERS_CREATE_POLL_FAIL'\r\nexport const QUESTIONS_ANSWERS_CREATE_POLL_RESET = 'QUESTIONS_ANSWERS_CREATE_POLL_RESET'\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport { FloatingLabel, Form } from \"react-bootstrap\";\r\n\r\nimport { sentAnswersFromUser } from \"../../../store/actions/answer-actions\";\r\n\r\nimport Button from \"../../UI/Button\";\r\nimport classes from \"./PollForm.module.css\"\r\n\r\n\r\nconst PollForm = ({ poll }) => {\r\n\r\n  const navigate = useNavigate();\r\n  const { poll_info: pollInfo, questions_answers: questionsAndAnswers } = poll;\r\n\r\n  const params = useParams();\r\n  const { pollId } = params;\r\n  const testArray = []\r\n\r\n  const setArrayToAnswers = () => {\r\n    const array = [];\r\n    questionsAndAnswers.forEach(question => {\r\n      if (question.type.is_multi_choice) {\r\n        const tempArray = [];\r\n        question.answers.forEach(item => testArray.push(item))\r\n        array.push(tempArray);\r\n      } else {\r\n        array.push({})\r\n      }\r\n    })\r\n    return array;\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const checkAnswersIsEmpty = () => {\r\n    let isEmpty = false;\r\n    tempAnswers.forEach(answer => {\r\n      if (Array.isArray(answer) && answer.length === 0) {\r\n        isEmpty = true;\r\n      } else if (Object.keys(answer).length === 0) {\r\n        isEmpty = true;\r\n      }\r\n    })\r\n    return isEmpty;\r\n  }\r\n\r\n  const removeEmptyValue = () => {\r\n    tempAnswers.forEach(item => {\r\n      if (Array.isArray(item)) {\r\n        const tmpArray = [];\r\n        item.forEach(answer => {\r\n          tmpArray.push(answer)\r\n        })\r\n        item.length = 0;\r\n        tmpArray.forEach(answer => {\r\n          item.push(answer)\r\n        })\r\n        item = [...tmpArray];\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const isEmptyForm = checkAnswersIsEmpty();\r\n    removeEmptyValue()\r\n    if (isEmptyForm) {\r\n      throw new Error('Error with form!')\r\n    } else {\r\n      dispatch(sentAnswersFromUser(tempAnswers, pollId));\r\n      navigate(`/polls/${pollId}/finished-poll`);\r\n    }\r\n  }\r\n\r\n  const [tempAnswers, setTempAnswers] = useState(setArrayToAnswers())\r\n\r\n  const changeInputValueHandler = (e, index) => {\r\n\r\n    const tempArray = [...tempAnswers];\r\n\r\n    if (e.target.type === 'radio') {\r\n\r\n      const { value, id } = e.target;\r\n\r\n      const answer = {\r\n        type: 'radio',\r\n        value,\r\n        id\r\n      }\r\n\r\n      tempArray[index] = answer;\r\n    } else if (e.target.type === 'checkbox') {\r\n      const isChecked = e.target.checked;\r\n\r\n\r\n      const answer = {\r\n        type: 'checkbox',\r\n        id: e.target.id,\r\n        value: e.target.value,\r\n      }\r\n\r\n\r\n      if (isChecked) {\r\n        testArray.forEach((item, indexItem) => {\r\n          if (item.id === +answer.id) {\r\n            tempArray[index][indexItem] = answer\r\n          }\r\n        })\r\n      } else {\r\n        testArray.forEach((item, indexItem) => {\r\n          if (item.id === +answer.id) {\r\n            tempArray[index] = tempArray[index].filter(item => item.id !== answer.id)\r\n            tempArray[index] = tempArray[index].filter(item => item)\r\n          }\r\n        })\r\n      }\r\n    } else if (e.target.type === 'textarea') {\r\n      const { value, id } = e.target;\r\n\r\n      const answer = {\r\n        type: 'textarea',\r\n        value,\r\n        id\r\n      }\r\n\r\n      tempArray[index] = answer;\r\n    } else if (e.target.type === 'date') {\r\n      const { value, id } = e.target;\r\n\r\n      const answer = {\r\n        type: 'date',\r\n        value,\r\n        id\r\n      }\r\n\r\n      tempArray[index] = answer;\r\n    }\r\n    setTempAnswers(tempArray);\r\n\r\n\r\n  }\r\n\r\n  const addAnswer = (questionType, answers, index) => {\r\n    switch (questionType) {\r\n      case 'is_single_choice': {\r\n        if (!answers.length) {\r\n          return;\r\n        }\r\n        const content = answers.map(answer =>\r\n          <div key={answer.id} className=\"mb-3\">\r\n            <Form.Check\r\n              type='radio'\r\n              id={answer.id}\r\n              required\r\n              value={answer.answer_text}\r\n              label={answer.answer_text}\r\n              name={'poll-option'}\r\n            />\r\n          </div>\r\n        )\r\n\r\n        return content;\r\n      }\r\n      case 'is_multi_choice': {\r\n        if (!answers.length) {\r\n          return;\r\n        }\r\n        const content = answers.map(answer =>\r\n          <div key={answer.id} className=\"mb-3\">\r\n            <Form.Check\r\n              type='checkbox'\r\n              id={answer.id}\r\n              value={answer.answer_text}\r\n              label={answer.answer_text}\r\n            />\r\n          </div>\r\n        )\r\n\r\n        return content;\r\n      }\r\n      case 'is_open': {\r\n        const content = <FloatingLabel\r\n          controlId=\"floatingTextarea2\"\r\n\r\n          key={answers[0].id}\r\n        >\r\n          <Form.Control\r\n            required\r\n            id={answers[0].id}\r\n            name=\"answer-open\"\r\n            as=\"textarea\"\r\n            placeholder=\"Wpisz swoją odpowiedź\"\r\n            style={{ height: '100px' }}\r\n          />\r\n        </FloatingLabel>\r\n        return content;\r\n      }\r\n      case 'is_date_choice': {\r\n        const content =\r\n          <Form.Control\r\n            type=\"date\"\r\n            key={answers[0].id}\r\n            required\r\n            id={answers[0].id}\r\n          />\r\n\r\n        return content\r\n      }\r\n      default: return\r\n    }\r\n  }\r\n\r\n  const checkQuestionType = (questionAndAnswer) => {\r\n    for (const [key, value] of Object.entries(questionAndAnswer.type))\r\n      if (value) return key;\r\n  }\r\n\r\n\r\n  const contentQuestionAnswer = questionsAndAnswers.map((questionAndAnswer, index) => {\r\n    const questionType = checkQuestionType(questionAndAnswer);\r\n\r\n    return (\r\n      <div key={questionAndAnswer.ID} className={classes['poll-question']}>\r\n        <div className={classes['poll-question-content']}>\r\n          <p>{questionAndAnswer.question_text}</p>\r\n          <div className={classes['question-content']}>\r\n            <div onChange={(e) => changeInputValueHandler(e, index)} className={classes.answers}>\r\n              {addAnswer(questionType, questionAndAnswer.answers, index)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <div className={classes['sub-nav']}>\r\n        <h2>{pollInfo.poll_name}</h2>\r\n      </div>\r\n      <Form onSubmit={submitHandler} className={classes[\"poll-container\"]}>\r\n        {contentQuestionAnswer}\r\n        <Button type={'submit'} style={`margin: 0 auto`}>\r\n          Wyślij formularz\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PollForm;","import axios from 'axios';\r\nimport URL from '../../constants/URL';\r\nimport {\r\n  SENT_ANSWER_FROM_USER_REQUEST,\r\n  SENT_ANSWER_FROM_USER_SUCCESS,\r\n  SENT_ANSWER_FROM_USER_FAIL,\r\n\r\n  ANSWER_BY_POLL_ID_REQUEST,\r\n  ANSWER_BY_POLL_ID_SUCCESS,\r\n  ANSWER_BY_POLL_ID_FAIL,\r\n\r\n  ANSWER_QUESTION_CREATE_POLL_REQUEST,\r\n  ANSWER_QUESTION_CREATE_POLL_SUCCESS,\r\n  ANSWER_QUESTION_CREATE_POLL_FAIL,\r\n\r\n  QUESTIONS_ANSWERS_CREATE_POLL_REQUEST,\r\n  QUESTIONS_ANSWERS_CREATE_POLL_SUCCESS,\r\n  QUESTIONS_ANSWERS_CREATE_POLL_FAIL,\r\n} from '../../constants/answerConstants';\r\n\r\nexport const sentAnswersFromUser = (answers, pollId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: SENT_ANSWER_FROM_USER_REQUEST })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n\r\n    await axios.put(`${URL}/api/polls/${pollId}/finished-poll`,\r\n      answers,\r\n      config\r\n    );\r\n\r\n\r\n\r\n    dispatch({\r\n      type: SENT_ANSWER_FROM_USER_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SENT_ANSWER_FROM_USER_FAIL,\r\n      payload: error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const getAnswersByPollId = (pollId) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ANSWER_BY_POLL_ID_REQUEST })\r\n\r\n\r\n\r\n    const { data } = await axios.get(`${URL}/api/polls/${pollId}`,);\r\n\r\n\r\n\r\n    dispatch({\r\n      type: ANSWER_BY_POLL_ID_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ANSWER_BY_POLL_ID_FAIL,\r\n      payload: error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const getAnswersQuestionCreatePoll = (answer, answersQuestion) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ANSWER_QUESTION_CREATE_POLL_REQUEST })\r\n\r\n\r\n    let item = {};\r\n    let idArray = 0;\r\n    const answers = [...answersQuestion]\r\n    answers.forEach((answerItem, index) => {\r\n      if (answerItem.id === answer.id) {\r\n        item = { ...answerItem };\r\n        idArray = index;\r\n      }\r\n    })\r\n\r\n\r\n\r\n    if (item.id === answer.id) {\r\n      answers[idArray].answerText = answer.answerText\r\n    } else {\r\n      answers.push(answer)\r\n    }\r\n\r\n\r\n    dispatch({\r\n      type: ANSWER_QUESTION_CREATE_POLL_SUCCESS,\r\n      payload: answers\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ANSWER_QUESTION_CREATE_POLL_FAIL,\r\n      payload: error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const getQuestionsAnswersCreatePoll = (newQuestionAnswersObject, questionsAnswers, isRepeated) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: QUESTIONS_ANSWERS_CREATE_POLL_REQUEST })\r\n\r\n    const questionsAndAnswersArray = [...questionsAnswers]\r\n    if (isRepeated) {\r\n      questionsAndAnswersArray.forEach((item, index) => {\r\n        if (item.id === newQuestionAnswersObject.id) {\r\n          questionsAndAnswersArray[index] = newQuestionAnswersObject\r\n        }\r\n      })\r\n    } else {\r\n      questionsAndAnswersArray.push(newQuestionAnswersObject)\r\n    }\r\n\r\n\r\n\r\n    dispatch({\r\n      type: QUESTIONS_ANSWERS_CREATE_POLL_SUCCESS,\r\n      payload: questionsAndAnswersArray\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: QUESTIONS_ANSWERS_CREATE_POLL_FAIL,\r\n      payload: error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    })\r\n  }\r\n}","import { useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\r\nimport { getPoll } from \"../store/actions/poll-actions\";\r\nimport PollForm from \"../components/Polls/PollForm/PollForm\";\r\n\r\n\r\n\r\nconst PollPage = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const params = useParams();\r\n  const { pollId } = params;\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin;\r\n\r\n  const pollForm = useSelector(state => state.pollForm)\r\n  const { poll } = pollForm;\r\n\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      navigate('/login')\r\n    } else {\r\n      if (pollId) {\r\n        dispatch(getPoll(pollId))\r\n      }\r\n    }\r\n  }, [dispatch, navigate, userInfo, pollId])\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {Object.keys(poll).length === 0 ? <LoadingSpinner />\r\n        : <PollForm poll={poll} />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PollPage;","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","import axios from \"axios\";\r\nimport URL from '../../constants/URL';\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n\r\n  USER_LOGOUT,\r\n\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET\r\n} from \"../../constants/userConstants\";\r\n\r\nimport { POLL_LIST_RESET, POLL_DESCRIPTION_CREATE_POLL_RESET, POLL_RESET, DOWNLOAD_REPORT_POLL_RESET } from '../../constants/pollConstants'\r\n\r\nimport { USER_GROUP_LIST_RESET } from \"../../constants/userGroupConstants\";\r\n\r\nimport { USER_POLL_LIST_RESET } from \"../../constants/userPollConstants\";\r\n\r\nimport {\r\n  ANSWER_BY_POLL_ID_RESET,\r\n  ANSWER_QUESTION_CREATE_POLL_RESET,\r\n  QUESTIONS_ANSWERS_CREATE_POLL_RESET,\r\n} from '../../constants/answerConstants';\r\n\r\nimport {\r\n  GROUP_LIST_RESET,\r\n  GROUP_DETAILS_RESET,\r\n  GROUP_CREATE_RESET,\r\n  GROUP_UPDATE_RESET,\r\n} from \"../../constants/groupsConstants\"\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      `${URL}/api/users/login/`,\r\n      { 'username': email, 'password': password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      `${URL}/api/users/register/`,\r\n      { 'name': name, 'email': email, 'password': password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n  dispatch({ type: POLL_LIST_RESET })\r\n\r\n  dispatch({ type: USER_GROUP_LIST_RESET })\r\n  dispatch({ type: USER_POLL_LIST_RESET })\r\n  dispatch({ type: USER_LIST_RESET })\r\n\r\n  dispatch({ type: ANSWER_BY_POLL_ID_RESET })\r\n  dispatch({ type: ANSWER_QUESTION_CREATE_POLL_RESET })\r\n  dispatch({ type: QUESTIONS_ANSWERS_CREATE_POLL_RESET })\r\n\r\n  dispatch({ type: GROUP_LIST_RESET })\r\n  dispatch({ type: GROUP_DETAILS_RESET })\r\n  dispatch({ type: GROUP_CREATE_RESET })\r\n  dispatch({ type: GROUP_UPDATE_RESET })\r\n\r\n  dispatch({ type: POLL_DESCRIPTION_CREATE_POLL_RESET })\r\n  dispatch({ type: DOWNLOAD_REPORT_POLL_RESET })\r\n\r\n  dispatch({ type: POLL_RESET })\r\n  dispatch({ type: USER_UPDATE_RESET })\r\n\r\n\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.get(\r\n      `${URL}/api/users/${id}/`,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `${URL}/api/users/profile/update/`,\r\n      user,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.get(\r\n      `${URL}/api/users/`,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.delete(\r\n      `${URL}/api/users/delete/${id}/`,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `${URL}/api/users/update/${user.id}/`,\r\n      user,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message,\r\n    })\r\n  }\r\n}","import { forwardRef } from \"react\";\r\n\r\n\r\nconst Input = forwardRef(({ input, label, onChange }, ref) => {\r\n  return (\r\n    <div>\r\n      {label && <label htmlFor={input.id}>{label}</label>}\r\n      <input onChange={onChange} ref={ref} {...input}>\r\n      </input>\r\n    </div>\r\n  )\r\n});\r\n\r\nexport default Input;","import { useRef, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate, NavLink } from 'react-router-dom';\r\nimport { login } from '../../../store/actions/user-actions';\r\n\r\nimport Input from '../../UI/Input'\r\nimport Button from '../../UI/Button'\r\nimport LoadingSpinner from '../../UI/LoadingSpinner';\r\n\r\nimport classes from './Login.module.css'\r\n\r\nconst Login = () => {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      navigate('/admin/userlist', { replace: true })\r\n    } else if (userInfo) {\r\n      navigate('/polls', { replace: true })\r\n    }\r\n  }, [navigate, userInfo, dispatch])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(login(emailInputRef.current.value, passwordInputRef.current.value))\r\n    if (error && error === 'No active account found with the given credentials') {\r\n      const errorMessage = 'Nie ma takiego konta!';\r\n      setMessage(errorMessage);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes['page-container-login']}>\r\n      <div className={classes.form}>\r\n\r\n        <div className={classes['form-content']}>\r\n\r\n\r\n          {loading ? <LoadingSpinner />\r\n            : error ? <h2>Błąd: {error}</h2>\r\n              :\r\n              <>\r\n                <h2>Logowanie</h2>\r\n                <form onSubmit={submitHandler} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                  <Input\r\n                    ref={emailInputRef}\r\n                    input={{\r\n                      id: 'email',\r\n                      type: 'email',\r\n                      placeholder: 'Podaj email'\r\n                    }}\r\n                  />\r\n                  <Input\r\n                    ref={passwordInputRef}\r\n                    input={{\r\n                      id: 'password',\r\n                      type: 'password',\r\n                      placeholder: 'Podaj hasło'\r\n                    }}\r\n\r\n                  />\r\n                  <Button\r\n                    type={'submit'}\r\n                    disabled={false}\r\n                  >\r\n                    Zaloguj się\r\n                  </Button>\r\n                </form>\r\n              </>\r\n          }\r\n        </div>\r\n\r\n        {message && <p className={classes.error}>{message}</p>}\r\n        <div className={classes.info}>\r\n          <p>Nie masz konta ?</p>\r\n          <NavLink className={classes.info} to={'/register'}>Zarejestruj się!</NavLink>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;","import Login from \"../components/Auth/Login/Login\";\r\n\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <Login />\r\n  )\r\n}\r\n\r\nexport default LoginPage;","import { useState, useRef, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useLocation, useNavigate, NavLink } from 'react-router-dom';\r\nimport { register } from '../../../store/actions/user-actions';\r\n\r\nimport Input from '../../UI/Input'\r\nimport Button from '../../UI/Button'\r\nimport LoadingSpinner from '../../UI/LoadingSpinner';\r\n\r\nimport classes from './Register.module.css'\r\n\r\nconst Register = () => {\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n\r\n  const nameInputRef = useRef();\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n  const confirmPasswordInputRef = useRef();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  const userRegister = useSelector(state => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      navigate(redirect, { replace: true })\r\n    }\r\n  }, [navigate, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!nameInputRef.current.value || !emailInputRef.current.value || !passwordInputRef.current.value || !confirmPasswordInputRef.current.value) {\r\n      setMessage('Proszę wypełnić pola!');\r\n    } else if (passwordInputRef.current.value !== confirmPasswordInputRef.current.value) {\r\n      setMessage('Hasła nie pasują do siebie!');\r\n    }\r\n    else {\r\n      dispatch(register(nameInputRef.current.value, emailInputRef.current.value, passwordInputRef.current.value))\r\n    }\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <div className={classes['page-container-login']}>\r\n      <div className={classes.form}>\r\n        <div className={classes['form-content']}>\r\n          {loading ? <LoadingSpinner />\r\n            : error ? <h2>Błąd: {error}</h2>\r\n              :\r\n              <>\r\n                <h2>Rejestracja</h2>\r\n                <form onSubmit={submitHandler} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                  <Input\r\n\r\n                    ref={nameInputRef}\r\n                    input={{\r\n                      id: 'name',\r\n                      type: 'text',\r\n                      placeholder: 'Podaj imie',\r\n\r\n                    }}\r\n                  />\r\n                  <Input\r\n                    ref={emailInputRef}\r\n                    input={{\r\n                      id: 'email',\r\n                      type: 'email',\r\n                      placeholder: 'Podaj email',\r\n\r\n                    }}\r\n                  />\r\n                  <Input\r\n                    ref={passwordInputRef}\r\n                    input={{\r\n                      id: 'password',\r\n                      type: 'password',\r\n                      placeholder: 'Podaj hasło',\r\n\r\n                    }}\r\n\r\n                  />\r\n                  <Input\r\n                    ref={confirmPasswordInputRef}\r\n                    input={{\r\n                      id: 'password2',\r\n                      type: 'password',\r\n                      placeholder: 'Powtórz hasło',\r\n\r\n                    }}\r\n\r\n                  />\r\n                  <Button\r\n                    type={'submit'}\r\n                    disabled={false}\r\n                  >\r\n                    Zarejestruj się\r\n                  </Button>\r\n                </form>\r\n              </>\r\n          }\r\n        </div>\r\n        {message && <p className={classes.error}>{message}</p>}\r\n        <div className={classes.info}>\r\n          <p>Masz już konto ?</p>\r\n          <NavLink className={classes.info} to={'/login'}>Zaloguj się!</NavLink>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register;","import Register from \"../components/Auth/Register/Register\";\r\n\r\n\r\nconst RegisterPage = () => {\r\n  return (\r\n    <Register />\r\n  )\r\n}\r\n\r\nexport default RegisterPage;","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getUserDetails, updateUserProfile } from '../../../store/actions/user-actions';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../../../constants/userConstants';\r\n\r\nimport Input from '../../UI/Input'\r\nimport Button from '../../UI/Button'\r\nimport LoadingSpinner from '../../UI/LoadingSpinner';\r\n\r\nimport classes from './Profile.module.css'\r\n\r\nconst Profile = () => {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState('')\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const userDetails = useSelector(state => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      navigate('/login')\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n        dispatch(getUserDetails('profile'))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [navigate, userInfo, dispatch, user, success])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setMessage('Hasła nie pasują do siebie!');\r\n    }\r\n    else {\r\n      dispatch(updateUserProfile({\r\n        'id': user.id,\r\n        'name': name,\r\n        'email': email,\r\n        'password': password\r\n      }))\r\n      setMessage('Dane zostały zmienione!');\r\n    }\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <div className={classes['page-container-login']}>\r\n      <div className={classes.form}>\r\n        <div className={classes['form-content']}>\r\n          {loading ? <LoadingSpinner />\r\n            : error ? <h2>Błąd: {error}</h2>\r\n              :\r\n              <>\r\n                <h2>Twoje konto</h2>\r\n                <form onSubmit={submitHandler}>\r\n                  <Input\r\n                    input={{\r\n                      id: 'name',\r\n                      type: 'text',\r\n                      placeholder: 'Podaj imie',\r\n                      value: name,\r\n                      onChange: (e) => setName(e.target.value)\r\n                    }}\r\n                  />\r\n                  <Input\r\n                    input={{\r\n                      id: 'email',\r\n                      type: 'email',\r\n                      placeholder: 'Podaj email',\r\n                      value: email,\r\n                      onChange: (e) => setEmail(e.target.value)\r\n                    }}\r\n                  />\r\n                  <Input\r\n                    input={{\r\n                      id: 'password',\r\n                      type: 'password',\r\n                      placeholder: 'Podaj hasło',\r\n                      value: password,\r\n                      onChange: (e) => setPassword(e.target.value)\r\n                    }}\r\n\r\n                  />\r\n                  <Input\r\n                    input={{\r\n                      id: 'password2',\r\n                      type: 'password',\r\n                      placeholder: 'Powtórz hasło',\r\n                      value: confirmPassword,\r\n                      onChange: (e) => setConfirmPassword(e.target.value)\r\n                    }}\r\n\r\n                  />\r\n                  <Button\r\n                    type={'submit'}\r\n                    disabled={false}\r\n                    className='button'\r\n                  >\r\n                    Zaktualizuj\r\n                  </Button>\r\n                </form>\r\n              </>\r\n          }\r\n        </div>\r\n        {message && <p className={classes.error}>{message}</p>}\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import Profile from \"../components/Auth/Profile/Profile\";\r\n\r\n\r\nconst ProfilePage = () => {\r\n  return (\r\n    <Profile />\r\n  )\r\n}\r\n\r\nexport default ProfilePage;","import { LinkContainer } from \"react-router-bootstrap\";\r\nimport Button from '../UI/Button'\r\n\r\n\r\nconst PollFinished = () => {\r\n  return (\r\n    <div>\r\n      <p>Dziękujemy za wypełnienie ankiety! Możesz teraz wrócić do wyboru dostępnych ankiet.</p>\r\n      <LinkContainer to=\"/polls\">\r\n        <Button>\r\n          Moje ankiety\r\n        </Button>\r\n      </LinkContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PollFinished;","import PollFinished from \"../components/Polls/PollFinished\";\r\n\r\nconst PollFinishedPage = () => {\r\n  return (\r\n\r\n    <PollFinished />\r\n\r\n  )\r\n}\r\n\r\nexport default PollFinishedPage;","import { Form, FloatingLabel } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport Button from '../UI/Button'\r\nimport classes from \"./PollForm/PollForm.module.css\"\r\n\r\nconst PollFilled = ({ poll }) => {\r\n\r\n  const { poll_info: pollInfo, questions_answers: questionsAndAnswers } = poll;\r\n\r\n  const addAnswer = (questionType, answers, index) => {\r\n    switch (questionType) {\r\n      case 'is_single_choice': {\r\n        if (!answers.length) {\r\n          return;\r\n        }\r\n        const content = answers.map(answer => {\r\n          if (answer.isMarked) {\r\n            return (\r\n\r\n              <div key={answer.id} className=\"mb-3\">\r\n                <Form.Check\r\n                  type='radio'\r\n                  id={answer.id}\r\n                  required\r\n                  value={answer.answer_text}\r\n                  label={answer.answer_text}\r\n                  name={'poll-option'}\r\n                  disabled\r\n                  checked\r\n                />\r\n              </div>\r\n            )\r\n          } else {\r\n            return (\r\n\r\n              <div key={answer.id} className=\"mb-3\">\r\n                <Form.Check\r\n                  type='radio'\r\n                  id={answer.id}\r\n                  required\r\n                  value={answer.answer_text}\r\n                  label={answer.answer_text}\r\n                  name={'poll-option'}\r\n                  disabled\r\n                />\r\n              </div>\r\n            )\r\n          }\r\n\r\n        })\r\n\r\n        return content;\r\n      }\r\n      case 'is_multi_choice': {\r\n        if (!answers.length) {\r\n          return;\r\n        }\r\n        const content = answers.map(answer =>\r\n          answer.isMarked ?\r\n\r\n            <div key={answer.id} className=\"mb-3\">\r\n              <Form.Check\r\n                type='checkbox'\r\n                name={answer.answer_text}\r\n                id={answer.id}\r\n                value={answer.answer_text}\r\n                label={answer.answer_text}\r\n                disabled\r\n                checked\r\n              />\r\n            </div>\r\n            :\r\n            <div key={answer.id} className=\"mb-3\">\r\n              <Form.Check\r\n                type='checkbox'\r\n                name={answer.answer_text}\r\n                id={answer.id}\r\n                value={answer.answer_text}\r\n                label={answer.answer_text}\r\n                disabled\r\n              />\r\n            </div>\r\n        )\r\n\r\n        return content;\r\n      }\r\n      case 'is_open': {\r\n        const content =\r\n\r\n          <FloatingLabel\r\n            controlId=\"floatingTextarea2\"\r\n            key={answers[0].id}\r\n          >\r\n            <Form.Control\r\n              id={answers[0].id}\r\n              value={answers[0].openAnswer}\r\n              disabled\r\n              as=\"textarea\"\r\n              style={{ height: '100px' }}\r\n            />\r\n          </FloatingLabel>\r\n        return content;\r\n      }\r\n      case 'is_date_choice': {\r\n        const content =\r\n          <Form.Control\r\n            type=\"date\"\r\n            name=\"answer-date\"\r\n            key={answers[0].id}\r\n            disabled\r\n            value={answers[0].dateAnswer}\r\n            id={answers[0].id}\r\n          />\r\n        return content\r\n      }\r\n      default: return\r\n    }\r\n  }\r\n\r\n  const checkQuestionType = (questionAndAnswer) => {\r\n    for (const [key, value] of Object.entries(questionAndAnswer.type))\r\n      if (value) return key;\r\n  }\r\n\r\n\r\n  const contentQuestionAnswer = questionsAndAnswers.map((questionAndAnswer, index) => {\r\n    const questionType = checkQuestionType(questionAndAnswer);\r\n\r\n    return (\r\n      <div key={questionAndAnswer.ID} className={classes['poll-question']}>\r\n        <div className={classes['poll-question-content']}>\r\n          <p>{questionAndAnswer.question_text}</p>\r\n          <div className={classes['question-content']}>\r\n            <div className={classes.answers}>\r\n              {addAnswer(questionType, questionAndAnswer.answers, index)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <div className={classes['sub-nav']}>\r\n        <h2>{pollInfo.poll_name}</h2>\r\n      </div>\r\n      <div className={classes[\"poll-container\"]}>\r\n        {contentQuestionAnswer}\r\n        <LinkContainer to=\"/polls\">\r\n          <Button>\r\n            Wróć do wszystkich ankiet\r\n          </Button>\r\n        </LinkContainer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PollFilled;","import { useEffect } from 'react'\r\nimport { useParams, useNavigate } from 'react-router';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getPoll } from \"../store/actions/poll-actions\";\r\n\r\nimport PollFilled from \"../components/Polls/PollFilled\";\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\n\r\n\r\nconst PollFilledPage = () => {\r\n\r\n  const params = useParams()\r\n  const { pollId } = params;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const pollForm = useSelector(state => state.pollForm)\r\n  const { poll } = pollForm;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      navigate('/login')\r\n    } else {\r\n      if (pollId) {\r\n        dispatch(getPoll(pollId))\r\n      }\r\n    }\r\n  }, [dispatch, navigate, userInfo, pollId])\r\n\r\n  return (\r\n    <>\r\n      {Object.keys(poll).length === 0 ? <LoadingSpinner />\r\n        : <PollFilled poll={poll} />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PollFilledPage;","import { useState, useRef, useEffect } from \"react\";\r\nimport { Form, Card, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { allGroups } from \"../../../store/actions/group-actions\";\r\nimport { pollDescriptionCreatePoll } from \"../../../store/actions/poll-actions\";\r\nimport LoadingSpinner from '../../UI/LoadingSpinner'\r\n\r\n\r\nimport classes from \"./PollDescription.module.css\"\r\n\r\nconst PollDescription = () => {\r\n\r\n  const [isSaved, setIsSaved] = useState(false)\r\n  const [isClickedEverybodyCheckbox, setisClickedEverybodyCheckbox] = useState(false)\r\n  const [isClickedAnotherCheckbox, setisClickedAnotherCheckbox] = useState(false)\r\n  const [groupList, setGroups] = useState([])\r\n\r\n  const namePollInputRef = useRef()\r\n  const descriptionPollInputRef = useRef()\r\n  const deadlinePollInputRef = useRef()\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const allGroupList = useSelector(state => state.allGroupList);\r\n  const { groups, loading } = allGroupList;\r\n\r\n  useEffect(() => {\r\n    dispatch(allGroups());\r\n\r\n  }, [dispatch])\r\n\r\n\r\n  const checkClickedCheckbox = (tempArray) => {\r\n\r\n    const isChecked = tempArray.findIndex(group => group.group_name === 'Wszyscy')\r\n\r\n    if (isChecked !== -1) {\r\n      setisClickedEverybodyCheckbox(true)\r\n      setisClickedAnotherCheckbox(false)\r\n    } else if (!tempArray.length) {\r\n      setisClickedEverybodyCheckbox(false)\r\n      setisClickedAnotherCheckbox(false)\r\n    }\r\n    else {\r\n      setisClickedAnotherCheckbox(true)\r\n      setisClickedEverybodyCheckbox(false)\r\n    }\r\n  }\r\n\r\n\r\n  const savePollDescriptionHandler = () => {\r\n\r\n    const { value: pollName } = namePollInputRef.current;\r\n    const { value: pollDescription } = descriptionPollInputRef.current;\r\n    const { value: pollDeadline } = deadlinePollInputRef.current;\r\n\r\n    const pollDescriptionObject = {\r\n      pollName,\r\n      pollDescription,\r\n      groupList,\r\n      pollDeadline,\r\n    }\r\n\r\n    dispatch(pollDescriptionCreatePoll(pollDescriptionObject))\r\n\r\n    setIsSaved(true)\r\n  }\r\n\r\n  const editPollDescriptionHandler = () => {\r\n    setIsSaved(false)\r\n  }\r\n\r\n  const getGroupFromInput = (e) => {\r\n    const tempArray = [...groupList]\r\n    const { value, id } = e.target;\r\n    const index = tempArray.findIndex(group => group.ID === id)\r\n\r\n    if (index === -1) {\r\n      const groupObject = {\r\n        ID: id,\r\n        group_name: value\r\n      }\r\n      tempArray.push(groupObject)\r\n    } else {\r\n      tempArray.splice(index, 1)\r\n    }\r\n\r\n    setGroups(tempArray);\r\n    checkClickedCheckbox(tempArray);\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {!loading ?\r\n        <>\r\n          <Card>\r\n            <Card.Body>\r\n              <Form.Group className=\"mb-3\" controlId=\"formPollName\">\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  placeholder=\"Nazwa ankiety\"\r\n                  disabled={isSaved}\r\n                  ref={namePollInputRef}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Control\r\n                  required\r\n                  disabled={isSaved}\r\n                  name=\"answer-open\"\r\n                  as=\"textarea\"\r\n                  ref={descriptionPollInputRef}\r\n                  placeholder=\"Opis...\"\r\n                  style={{ height: '100px' }}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group style={{ marginTop: '10px' }}>\r\n                {\r\n                  groups.map(group => {\r\n                    if (group.group_name === 'Wszyscy') {\r\n                      return (\r\n                        <Form.Check\r\n                          key={group.ID}\r\n                          inline\r\n                          onChange={getGroupFromInput}\r\n                          disabled={isSaved || isClickedAnotherCheckbox} type=\"checkbox\"\r\n                          name={group.group_name}\r\n                          id={group.ID}\r\n                          value={group.group_name}\r\n                          label={group.group_name}\r\n                        />\r\n                      )\r\n                    }\r\n\r\n                    else {\r\n                      return (\r\n                        <Form.Check\r\n                          key={group.ID}\r\n                          inline\r\n                          onChange={getGroupFromInput}\r\n                          disabled={isSaved || isClickedEverybodyCheckbox} type=\"checkbox\"\r\n                          name={group.group_name}\r\n                          id={group.ID}\r\n                          value={group.group_name}\r\n                          label={group.group_name}\r\n                        />\r\n                      )\r\n                    }\r\n\r\n\r\n                  }\r\n                  )\r\n                }\r\n              </Form.Group>\r\n              <Form.Group style={{ marginTop: '10px' }}>\r\n                <Form.Control\r\n                  disabled={isSaved}\r\n                  ref={deadlinePollInputRef}\r\n                  type=\"datetime-local\"\r\n                  name=\"date-deadline\"\r\n                  id=\"date-deadline\"\r\n                  min={new Date().toISOString().split(\".\")[0]}\r\n                />\r\n              </Form.Group>\r\n\r\n            </Card.Body>\r\n            {!isSaved ? <div className={classes[\"poll-description-menu\"]}>\r\n              <Button variant=\"success\" type=\"button\" onClick={savePollDescriptionHandler}>Zapisz</Button>\r\n            </div> :\r\n              <div className={classes[\"poll-description-menu\"]}>\r\n                <Button variant=\"primary\" type=\"button\" onClick={editPollDescriptionHandler}>Edytuj</Button>\r\n              </div>\r\n            }\r\n          </Card>\r\n        </ > :\r\n        <LoadingSpinner />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PollDescription;","import { useEffect, useState, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { getAnswersQuestionCreatePoll } from \"../../../store/actions/answer-actions\";\r\n\r\nconst PollOptionAnswer = ({ typeAnswer, id, isSaved, onRemoveOptionAnswer }) => {\r\n\r\n  const [answerInputValue, setAnswerInputValue] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const answersCreatePoll = useSelector(state => state.answersCreatePoll);\r\n  const { answersQuestion } = answersCreatePoll;\r\n\r\n  const changeValueHandler = useCallback((e) => {\r\n    const { value } = e.target;\r\n    setAnswerInputValue(value);\r\n\r\n  }, [])\r\n\r\n\r\n  const blurValueHandler = useCallback(() => {\r\n    if (answerInputValue === \"\") return;\r\n    const answer = {\r\n      \"id\": id,\r\n      \"answerText\": answerInputValue\r\n    }\r\n    dispatch(getAnswersQuestionCreatePoll(answer, answersQuestion))\r\n  }, [answerInputValue, answersQuestion, dispatch, id])\r\n\r\n\r\n  const [contentOptionAnswer, setContentOptionAnswer] = useState(null);\r\n\r\n\r\n  const checkTypeAnswer = useCallback(() => {\r\n\r\n    let content = null;\r\n\r\n    switch (true) {\r\n      case typeAnswer.isSingleChoice: {\r\n\r\n        content = (\r\n          <>\r\n            <Form.Label style={{ display: 'flex', margin: '20px 0' }}>\r\n              <Form.Check\r\n                style={{ display: 'flex', alignItems: 'center' }}\r\n                type='radio'\r\n                disabled\r\n              />\r\n              {!isSaved ?\r\n                <Form.Control\r\n                  style={{ height: '100%', marginLeft: '10px' }}\r\n                  onBlur={blurValueHandler}\r\n                  onChange={changeValueHandler}\r\n                  value={answerInputValue}\r\n                  type=\"text\"\r\n                  placeholder=\"Odpowiedź\" /> :\r\n                <Form.Control\r\n                  style={{ height: '100%' }}\r\n                  disabled\r\n                  onBlur={blurValueHandler}\r\n                  onChange={changeValueHandler}\r\n                  value={answerInputValue}\r\n                  type=\"text\"\r\n                  placeholder=\"Odpowiedź\" />\r\n              }\r\n            </Form.Label>\r\n\r\n            <Button style={{ width: '20%' }} type=\"button\" variant=\"danger\" onClick={() => onRemoveOptionAnswer(id)}>Usuń opcję</Button>\r\n          </>\r\n        );\r\n\r\n        break;\r\n      }\r\n      case typeAnswer.isMultiChoice: {\r\n        content = (\r\n\r\n\r\n          <>\r\n            <Form.Label style={{ display: 'flex', margin: '20px 0' }}>\r\n              <Form.Check\r\n                style={{ display: 'flex', alignItems: 'center' }}\r\n                type='checkbox'\r\n                disabled\r\n              />\r\n\r\n              {!isSaved ?\r\n                <Form.Control\r\n                  style={{ height: '100%', marginLeft: '10px' }}\r\n                  onBlur={blurValueHandler}\r\n                  onChange={changeValueHandler}\r\n                  value={answerInputValue}\r\n                  type=\"text\"\r\n                  placeholder=\"Odpowiedź\" /> :\r\n                <Form.Control\r\n                  style={{ height: '100%' }}\r\n                  disabled\r\n                  onBlur={blurValueHandler}\r\n                  onChange={changeValueHandler}\r\n                  value={answerInputValue}\r\n                  type=\"text\"\r\n                  placeholder=\"Odpowiedź\" />\r\n              }\r\n\r\n            </Form.Label>\r\n\r\n            <Button style={{ width: '20%' }} type=\"button\" variant=\"danger\" onClick={() => onRemoveOptionAnswer(id)}>Usuń opcję</Button>\r\n          </>\r\n        );\r\n        break;\r\n      }\r\n      case typeAnswer.isOpen: {\r\n        content = (\r\n          <>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              disabled\r\n              style={{ margin: '20px 0' }}\r\n            />\r\n            <Button style={{ width: '20%' }} type=\"button\" variant=\"danger\" onClick={() => onRemoveOptionAnswer(id)}>Usuń opcję</Button>\r\n          </>\r\n        );\r\n        break;\r\n      }\r\n      case typeAnswer.isDateChoice: {\r\n\r\n        content = (\r\n          <>\r\n            <Form.Control\r\n              disabled\r\n              type=\"date\"\r\n              style={{ margin: '20px 0' }}\r\n            />\r\n            <Button style={{ width: '20%' }} type=\"button\" variant=\"danger\" onClick={() => onRemoveOptionAnswer(id)}>Usuń opcję</Button>\r\n          </>\r\n        );\r\n\r\n        break;\r\n      }\r\n      default: {\r\n        content = null;\r\n      }\r\n    }\r\n    setContentOptionAnswer(content)\r\n  }, [typeAnswer, answerInputValue, blurValueHandler, changeValueHandler, isSaved, onRemoveOptionAnswer, id])\r\n\r\n  useEffect(() => {\r\n    checkTypeAnswer();\r\n  }, [checkTypeAnswer])\r\n\r\n  return (\r\n    <>\r\n      {contentOptionAnswer}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PollOptionAnswer;","import { useRef, useEffect, useState, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport PollOptionAnswer from \"./PollOptionAnswer\";\r\nimport { getQuestionsAnswersCreatePoll } from \"../../../store/actions/answer-actions\";\r\nimport { ANSWER_QUESTION_CREATE_POLL_RESET } from \"../../../constants/answerConstants\";\r\n\r\nimport classes from \"./PollQuestionAnswers.module.css\"\r\n\r\nconst PollQuestionAnswers = ({ id: questionAnswerID, onRemoveQuestionWithAnswers }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [isSaved, setIsSaved] = useState(false)\r\n\r\n  const answersCreatePoll = useSelector(state => state.answersCreatePoll)\r\n  const { answersQuestion } = answersCreatePoll\r\n\r\n  const allQuestionsAnswersCreatePoll = useSelector(state => state.allQuestionsAnswersCreatePoll);\r\n  const { questionsAnswers } = allQuestionsAnswersCreatePoll;\r\n\r\n  const [typeAnswer, setTypeAnswer] = useState({\r\n    \"isSingleChoice\": true,\r\n    \"isMultiChoice\": false,\r\n    \"isOpen\": false,\r\n    \"isDateChoice\": false\r\n  });\r\n  const [selectedTypeAnswer, setSelectedTypeAnswer] = useState('');\r\n  const [answers, setAnswers] = useState([]);\r\n\r\n  const questionInputRef = useRef();\r\n\r\n\r\n  const selectTypeAnswerHandler = (e) => {\r\n\r\n    const { value } = e.target\r\n\r\n    setSelectedTypeAnswer(value)\r\n\r\n    let typeAnswerTemp = {}\r\n\r\n    switch (value) {\r\n      case \"one\": {\r\n        typeAnswerTemp = {\r\n          \"isSingleChoice\": true,\r\n          \"isMultiChoice\": false,\r\n          \"isOpen\": false,\r\n          \"isDateChoice\": false\r\n        }\r\n        break;\r\n      }\r\n      case \"multi\": {\r\n        typeAnswerTemp = {\r\n          \"isSingleChoice\": false,\r\n          \"isMultiChoice\": true,\r\n          \"isOpen\": false,\r\n          \"isDateChoice\": false\r\n        }\r\n        break;\r\n      }\r\n      case \"open\": {\r\n        typeAnswerTemp = {\r\n          \"isSingleChoice\": false,\r\n          \"isMultiChoice\": false,\r\n          \"isOpen\": true,\r\n          \"isDateChoice\": false\r\n        }\r\n        dispatch({ type: ANSWER_QUESTION_CREATE_POLL_RESET })\r\n        break;\r\n      }\r\n      case \"date\": {\r\n        typeAnswerTemp = {\r\n          \"isSingleChoice\": false,\r\n          \"isMultiChoice\": false,\r\n          \"isOpen\": false,\r\n          \"isDateChoice\": true\r\n        }\r\n        dispatch({ type: ANSWER_QUESTION_CREATE_POLL_RESET })\r\n        break;\r\n      }\r\n      default:\r\n        typeAnswerTemp = {\r\n          \"isSingleChoice\": false,\r\n          \"isMultiChoice\": false,\r\n          \"isOpen\": false,\r\n          \"isDateChoice\": false\r\n        }\r\n    }\r\n\r\n    setTypeAnswer(typeAnswerTemp);\r\n  }\r\n\r\n  const removeOptionAnswerHandler = useCallback((id) => {\r\n\r\n    const answersTemp = [...answers]\r\n    const tempArray = answersTemp.filter(item => item.id !== id)\r\n    setAnswers(tempArray)\r\n\r\n  }, [])\r\n\r\n  const defaultAmountOfAnswers = useCallback(() => {\r\n    const answersArray = [];\r\n    if (typeAnswer.isSingleChoice || typeAnswer.isMultiChoice) {\r\n      for (let i = 0; i < answers.length; i++) {\r\n        answersArray.push(<PollOptionAnswer onRemoveOptionAnswer={removeOptionAnswerHandler} isSaved={isSaved} key={answersArray.length} id={answersArray.length} typeAnswer={typeAnswer} />)\r\n      }\r\n    } else {\r\n      answersArray.push(<PollOptionAnswer onRemoveOptionAnswer={removeOptionAnswerHandler} isSaved={isSaved} key={answersArray.length} id={answersArray.length} typeAnswer={typeAnswer} />)\r\n    }\r\n    setAnswers(answersArray)\r\n  }, [typeAnswer, isSaved, removeOptionAnswerHandler, answers.length])\r\n\r\n  useEffect(() => {\r\n    defaultAmountOfAnswers();\r\n  }, [defaultAmountOfAnswers])\r\n\r\n\r\n\r\n\r\n\r\n  const addOptionToAnswerHandler = useCallback(() => {\r\n    const answersArray = [...answers]\r\n    answersArray.push(<PollOptionAnswer onRemoveOptionAnswer={removeOptionAnswerHandler} isSaved={isSaved} key={answersArray.length} id={answersArray.length} typeAnswer={typeAnswer} />)\r\n    setAnswers(answersArray)\r\n  }, [isSaved, answers, typeAnswer, removeOptionAnswerHandler])\r\n\r\n\r\n\r\n  const savePollHandler = () => {\r\n    const { value: questionValue } = questionInputRef.current;\r\n\r\n    if (!questionValue || !answers.length || (!answersQuestion.length && (typeAnswer.isSingleChoice || typeAnswer.isMultiChoice))) {\r\n      return\r\n    }\r\n\r\n    let isRepeated = false;\r\n\r\n    questionsAnswers.forEach(question => {\r\n      if (question.id === questionAnswerID) {\r\n        isRepeated = true;\r\n      }\r\n    })\r\n\r\n    setIsSaved(true);\r\n\r\n    let questionAndAnswers = {};\r\n\r\n    if (answersQuestion.length) {\r\n      questionAndAnswers = {\r\n        \"id\": questionAnswerID,\r\n        \"questionText\": questionValue,\r\n        \"type\": typeAnswer,\r\n        \"answers\": answersQuestion,\r\n      }\r\n    } else {\r\n      questionAndAnswers = {\r\n        \"id\": questionAnswerID,\r\n        \"questionText\": questionValue,\r\n        \"type\": typeAnswer,\r\n      }\r\n    }\r\n\r\n\r\n    dispatch(getQuestionsAnswersCreatePoll(questionAndAnswers, questionsAnswers, isRepeated))\r\n\r\n\r\n  }\r\n\r\n  const editPollHandler = () => {\r\n    setIsSaved(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={classes[\"poll-question\"]}>\r\n        <div className={classes[\"poll-question-content\"]}>\r\n          {!isSaved ? <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Pytanie\"\r\n            ref={questionInputRef}\r\n          /> :\r\n            <Form.Control\r\n              disabled\r\n              type=\"text\"\r\n              placeholder=\"Pytanie\"\r\n              ref={questionInputRef}\r\n            />\r\n          }\r\n          <div className={classes[\"question-content\"]}>\r\n            <div className={classes.answers}>\r\n              {answers}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {!isSaved ? <div className={classes[\"question-menu\"]}>\r\n          {typeAnswer.isSingleChoice || typeAnswer.isMultiChoice ?\r\n            <Button variant=\"secondary\" type=\"button\" onClick={addOptionToAnswerHandler}>Dodaj opcję</Button>\r\n            : null}\r\n          <Form.Select style={{ width: 'auto' }} onChange={selectTypeAnswerHandler} value={selectedTypeAnswer} name=\"type-answer\" id=\"type-answer\">\r\n            <option value=\"one\">Jednokrotny wybór</option>\r\n            <option value=\"multi\">Wielokrotny wybór</option>\r\n            <option value=\"open\">Otwarta odpowiedź</option>\r\n            <option value=\"date\">Data</option>\r\n          </Form.Select>\r\n\r\n          <Button variant=\"success\" type=\"button\" onClick={savePollHandler}>Zapisz</Button>\r\n          <Button variant=\"danger\" type=\"button\" onClick={() => onRemoveQuestionWithAnswers(questionAnswerID)}>Usuń pytanie</Button>\r\n        </div> :\r\n          <div className={classes[\"question-menu\"]}>\r\n            <Button variant=\"info\" type=\"button\" onClick={editPollHandler}>Edytuj</Button>\r\n            <Button variant=\"danger\" type=\"button\" onClick={() => onRemoveQuestionWithAnswers(questionAnswerID)}>Usuń pytanie</Button>\r\n          </div>\r\n        }\r\n      </div >\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PollQuestionAnswers;","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from 'react-router';\r\nimport { ANSWER_QUESTION_CREATE_POLL_RESET } from \"../../../constants/answerConstants\";\r\nimport { sentNewPoll } from \"../../../store/actions/poll-actions\";\r\n\r\nimport PollDescription from \"./PollDescritpion\";\r\nimport Button from \"../../UI/Button\";\r\n\r\nimport classes from './CreatePoll.module.css'\r\nimport PollQuestionAnswers from \"./PollQuestionAnswers\";\r\nimport { Form, Table } from \"react-bootstrap\";\r\n\r\n\r\n\r\nconst CreatePoll = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate();\r\n\r\n  const pollDescriptionCreatePoll = useSelector(state => state.pollDescriptionCreatePoll);\r\n  const { pollDescription } = pollDescriptionCreatePoll\r\n\r\n  const allQuestionsAnswersCreatePoll = useSelector(state => state.allQuestionsAnswersCreatePoll);\r\n  const { questionsAnswers } = allQuestionsAnswersCreatePoll\r\n\r\n  const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\r\n\r\n  const removeQuestionWithAnswersHandler = (id) => {\r\n    const questionsAndAnswersTemp = [...questionsAndAnswers];\r\n    const tempArray = questionsAndAnswersTemp.filter(item => item.id !== id)\r\n    setQuestionsAndAnswers(tempArray)\r\n    dispatch({ type: ANSWER_QUESTION_CREATE_POLL_RESET })\r\n  }\r\n\r\n  const addQuestionWithAnswers = () => {\r\n    const questionsAndAnswersTemp = [...questionsAndAnswers];\r\n    questionsAndAnswersTemp.push(<PollQuestionAnswers key={questionsAndAnswersTemp.length} id={questionsAndAnswersTemp.length} onRemoveQuestionWithAnswers={removeQuestionWithAnswersHandler} />)\r\n\r\n    setQuestionsAndAnswers(questionsAndAnswersTemp)\r\n    dispatch({ type: ANSWER_QUESTION_CREATE_POLL_RESET })\r\n  }\r\n\r\n  const addPollHandler = (e) => {\r\n    e.preventDefault();\r\n    if (pollDescription && questionsAndAnswers.length) {\r\n      dispatch(sentNewPoll(pollDescription, questionsAnswers))\r\n      navigate('/polls/created-poll');\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className={classes[\"sub-nav\"]}>\r\n        <h2>Tworzenie ankiety</h2>\r\n      </div>\r\n      <Form onSubmit={addPollHandler} className={classes[\"poll-container\"]}>\r\n\r\n        <PollDescription />\r\n        {questionsAndAnswers.length !== 0 && questionsAndAnswers}\r\n        <Table style={{ marginTop: \"20px\" }} bordered responsive className='table-sm'>\r\n          {<thead>\r\n          </thead>}\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <Button type=\"button\" onClick={addQuestionWithAnswers}>Dodaj pytanię</Button>\r\n              </td>\r\n              <td>\r\n                <Button type=\"submit\">Opublikuj</Button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n\r\n\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreatePoll;","import CreatePoll from \"../components/Polls/CreatePoll/CreatePoll\";\r\n\r\nconst CreatePollPage = () => {\r\n  return (\r\n    <CreatePoll />\r\n  )\r\n}\r\n\r\nexport default CreatePollPage;","import { Link } from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux'\r\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\r\n\r\nconst PollCreated = () => {\r\n\r\n  const sentPoll = useSelector(state => state.sentPoll)\r\n  const { loading } = sentPoll\r\n\r\n  return (\r\n    <>\r\n      {\r\n        !loading ?\r\n          <div>\r\n            <p>Ankieta została utworzona! Już teraz, użytkownicy w poszczególnych grupach będą mogli wypełnić daną ankietę. Maile zostały wysłane z powiadomieniem o dostępności tej ankiety.</p>\r\n            <Link to=\"/polls\">Moje ankiety</Link>\r\n          </div> : <LoadingSpinner />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PollCreated;","import PollCreated from \"../components/Polls/PollCreated/PollCreated\";\r\n\r\nconst PollCreatedPage = () => {\r\n  return (\r\n    <PollCreated />\r\n  )\r\n}\r\n\r\nexport default PollCreatedPage;","import { useEffect, useState } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\r\nimport { listUsers, deleteUser } from '../store/actions/user-actions'\r\nimport { Container } from 'react-bootstrap'\r\nimport { useNavigate } from 'react-router'\r\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\r\n\r\n\r\n\r\nconst UserListScreen = () => {\r\n\r\n  const [searchEmail, setSearchEmail] = useState('')\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const userList = useSelector(state => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userDelete = useSelector(state => state.userDelete)\r\n  const { success: successDelete } = userDelete\r\n\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers())\r\n      dispatch({ type: USER_DETAILS_RESET })\r\n    } else {\r\n      navigate('/login')\r\n\r\n    }\r\n\r\n  }, [dispatch, successDelete, userInfo, navigate])\r\n\r\n\r\n  const deleteHandler = (id) => {\r\n\r\n    if (window.confirm('Jesteś pewny, że chcesz usunąć tego użytkownika?')) {\r\n      dispatch(deleteUser(id))\r\n    }\r\n  }\r\n\r\n  const searchEmailHandler = (e) => {\r\n    const { value } = e.target;\r\n\r\n    setSearchEmail(value)\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <h1>Użytkownicy</h1>\r\n        <Form.Control\r\n          type='text'\r\n          placeholder='Wyszukaj użytkownika...'\r\n          onChange={searchEmailHandler}\r\n          style={{ margin: '20px 0' }}\r\n        >\r\n\r\n        </Form.Control>\r\n        {loading\r\n          ? (<LoadingSpinner />)\r\n          : error\r\n            ? (<p>Błąd: {error}</p>)\r\n            : (\r\n              <Table striped bordered hover responsive className='table-sm'>\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>IMIĘ</th>\r\n                    <th>EMAIL</th>\r\n                    <th>ADMIN</th>\r\n                    <th>GRUPA</th>\r\n                    <th></th>\r\n                  </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                  {users.filter(val => {\r\n                    if (searchEmail == \"\") {\r\n                      return val\r\n                    } else if (val.user.email.toLowerCase().includes(searchEmail.toLowerCase())) {\r\n                      return val\r\n                    }\r\n                  }).map(user => (\r\n                    <tr key={user.user.id}>\r\n                      <td>{user.user.id}</td>\r\n                      <td>{user.user.name}</td>\r\n                      <td>{user.user.email}</td>\r\n                      <td>{user.user.isAdmin ? (\r\n                        <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                      ) : (\r\n                        <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                      )}</td>\r\n                      <td>\r\n                        {user.groups.map(group => (\r\n                          <p key={group.ID}>{group.group_name !== 'Wszyscy' && group.group_name}</p>\r\n                        )\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        <LinkContainer to={`/admin/user/${user.user.id}/edit`}>\r\n                          <Button variant='light' className='btn-sm'>\r\n                            <i className='fas fa-edit'></i>\r\n                          </Button>\r\n                        </LinkContainer>\r\n\r\n                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user.user.id)}>\r\n                          <i className='fas fa-trash'></i>\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            )}\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default UserListScreen","import { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer","import { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useNavigate, useParams } from 'react-router'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\r\nimport { getUserDetails, updateUser } from '../store/actions/user-actions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\nimport FormContainer from '../components/UI/FormContainer'\r\nimport { allGroups } from '../store/actions/group-actions'\r\nimport { useCallback } from 'react'\r\n\r\nfunction UserEditScreen() {\r\n  const params = useParams();\r\n  const { id: userId } = params;\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n  const [userGroups, setUserGroups] = useState([])\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector(state => state.userDetails)\r\n  const { error, loading, user } = userDetails\r\n\r\n  const allGroupList = useSelector(state => state.allGroupList)\r\n  const { loading: loadingAllGroupList, groups } = allGroupList\r\n\r\n  const userUpdate = useSelector(state => state.userUpdate)\r\n  const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n  const checkUserGroupBelong = useCallback((groupsTempp) => {\r\n    const userGroupsTemp = [...groupsTempp]\r\n    const groupsTemp = [...groups]\r\n\r\n    let isEmpty = false;\r\n    if (!userGroupsTemp.length) {\r\n      isEmpty = true\r\n    }\r\n\r\n    const array = []\r\n    groupsTemp.forEach(group => {\r\n      if (isEmpty && group.group_name !== 'Wszyscy') {\r\n        const userGroupBelong = {\r\n          'ID': group.ID,\r\n          'group_name': group.group_name,\r\n          'isBelong': false\r\n        }\r\n        array.push(userGroupBelong)\r\n      }\r\n      userGroupsTemp.forEach(userGroup => {\r\n        if (group.group_name !== 'Wszyscy') {\r\n          if (group.ID === userGroup.ID) {\r\n            const userGroupBelong = {\r\n              'ID': userGroup.ID,\r\n              'group_name': userGroup.group_name,\r\n              'isBelong': true\r\n            }\r\n\r\n            array.push(userGroupBelong)\r\n          } else {\r\n            const userGroupBelong = {\r\n              'ID': group.ID,\r\n              'group_name': group.group_name,\r\n              'isBelong': false\r\n            }\r\n            array.push(userGroupBelong)\r\n          }\r\n        }\r\n      })\r\n    })\r\n\r\n    for (let i = 0; i < array.length; i++) {\r\n      for (let j = i + 1; j < array.length; j++) {\r\n        if (array[i].ID === array[j].ID) {\r\n          if (array[i].isBelong) {\r\n            array.splice(j, 1)\r\n          } else {\r\n            array.splice(i, 1)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    setUserGroups(array)\r\n  }, [JSON.stringify(groups)])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(allGroups())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      navigate('/admin/userlist')\r\n    } else {\r\n      if (!user.userInfo || user.userInfo.id !== Number(userId)) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n\r\n        setName(user.userInfo.name)\r\n        setEmail(user.userInfo.email)\r\n        setIsAdmin(user.userInfo.isAdmin)\r\n        const groupsTempp = user.groups.filter(group => group.group_name !== 'Wszyscy')\r\n        setUserGroups(groupsTempp)\r\n        if (typeof groups !== \"undefined\") {\r\n          if (groups.length) {\r\n            checkUserGroupBelong(groupsTempp)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [user, userId, successUpdate, dispatch, navigate, JSON.stringify(groups)])\r\n\r\n  const setNewUserGroups = (e) => {\r\n    const { checked, id } = e.target;\r\n\r\n    const userGroupsTemp = [...userGroups]\r\n\r\n    const index = userGroupsTemp.findIndex(group => group.ID === parseInt(id, 10))\r\n\r\n    userGroupsTemp[index].isBelong = checked\r\n    setUserGroups(userGroupsTemp)\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ id: user.userInfo.id, name, userGroups, email, isAdmin }))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Link to='/admin/userlist'>\r\n        Powrót\r\n      </Link>\r\n\r\n      <FormContainer>\r\n        <h1>Edycja użytkownika</h1>\r\n        {loadingUpdate && <LoadingSpinner />}\r\n        {errorUpdate && <p>Błąd: {errorUpdate}</p>}\r\n\r\n        {loading && loadingAllGroupList ? <LoadingSpinner /> : error ? <p>Błąd: {error}</p>\r\n          : (\r\n            <Form onSubmit={submitHandler}>\r\n\r\n              <Form.Group controlId='name'>\r\n                <Form.Label>Imię</Form.Label>\r\n                <Form.Control\r\n\r\n                  type='name'\r\n                  placeholder='Wpisz imię'\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                >\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='email'>\r\n                <Form.Label>Adres email</Form.Label>\r\n                <Form.Control\r\n                  type='email'\r\n                  placeholder='Wpisz email'\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                >\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='isadmin'>\r\n                <Form.Check\r\n                  type='checkbox'\r\n                  label='Admin'\r\n                  checked={isAdmin}\r\n                  onChange={(e) => setIsAdmin(e.target.checked)}\r\n                >\r\n                </Form.Check>\r\n              </Form.Group>\r\n\r\n              <Form.Label>Wszystkie grupy</Form.Label>\r\n              <Form.Group controlId='groups'>\r\n                {userGroups.length ?\r\n\r\n                  userGroups.map(group =>\r\n                    <Form.Check\r\n                      key={group.ID}\r\n                      id={group.ID}\r\n                      type='checkbox'\r\n                      value={group.group_name}\r\n                      label={group.group_name}\r\n                      checked={group.isBelong}\r\n                      onChange={(e) => setNewUserGroups(e)}\r\n                    >\r\n                    </Form.Check>) :\r\n                  <LoadingSpinner />\r\n                }\r\n              </Form.Group>\r\n\r\n              <Button type='submit' variant='primary'>\r\n                Zaktualizuj\r\n              </Button>\r\n\r\n            </Form>\r\n          )}\r\n\r\n      </FormContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen","import { useEffect, useState } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useNavigate } from 'react-router'\r\nimport { Table, Button, Row, Col, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\r\nimport { Container } from 'react-bootstrap'\r\nimport { allGroups, deleteGroup } from '../store/actions/group-actions'\r\nimport { listUsers } from '../store/actions/user-actions'\r\n\r\nfunction GroupListScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n\r\n  const [searchGroup, setSearchGroup] = useState('')\r\n\r\n  const allGroupList = useSelector(state => state.allGroupList)\r\n  const { loading, error, groups } = allGroupList\r\n\r\n  const userList = useSelector(state => state.userList)\r\n  const { loading: loadingUserList, users } = userList\r\n\r\n\r\n  const groupDelete = useSelector(state => state.groupDelete)\r\n  const { loading: loadingDelete, error: errorDelete, success: successDelete } = groupDelete\r\n\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n\r\n    if (!userInfo.isAdmin) {\r\n      navigate('/login')\r\n    }\r\n\r\n    dispatch(allGroups())\r\n    dispatch(listUsers())\r\n\r\n\r\n  }, [dispatch, userInfo, navigate, successDelete])\r\n\r\n\r\n  const deleteHandler = (id) => {\r\n\r\n    if (window.confirm('Jesteś pewny, że chcesz usunąć tę grupę?')) {\r\n      dispatch(deleteGroup(id))\r\n\r\n    }\r\n  }\r\n\r\n  const createGroupHandler = () => {\r\n    navigate('/admin/group/create')\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <Row className='align-items-center'>\r\n          <Col>\r\n            <h1>Grupy</h1>\r\n          </Col>\r\n\r\n          <Col className='text-right'>\r\n            <Button className='my-3' onClick={createGroupHandler}>\r\n              <i className='fas fa-plus'></i> Stwórz grupę\r\n            </Button>\r\n          </Col>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Wyszukaj grupę...'\r\n            onChange={(e) => setSearchGroup(e.target.value)}\r\n            style={{ margin: '20px 0' }}\r\n          />\r\n        </Row>\r\n\r\n        {loadingDelete && <LoadingSpinner />}\r\n        {errorDelete && <p>Błąd: {errorDelete}</p>}\r\n\r\n        {loading || loadingUserList\r\n          ? (<LoadingSpinner />)\r\n          : error\r\n            ? (<p>Błąd: {error}</p>)\r\n            : (\r\n              <div>\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>ID</th>\r\n                      <th>NAZWA</th>\r\n                      <th>UŻYTKOWNICY</th>\r\n                      <th></th>\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  <tbody>\r\n                    {groups.filter(val => {\r\n                      if (searchGroup == \"\") {\r\n                        return val\r\n                      } else if (val.group_name.toLowerCase().includes(searchGroup.toLowerCase())) {\r\n                        return val\r\n                      }\r\n                    }).map(group => (\r\n                      <tr key={group.ID}>\r\n                        <td>{group.ID}</td>\r\n                        <td>{group.group_name}</td>\r\n                        <td>{users.map(user => {\r\n                          const isExisted = user.groups.some(item => {\r\n                            return item.ID === group.ID\r\n                          })\r\n                          if (isExisted) {\r\n                            return <p key={user.user.id}>{user.user.username}</p>\r\n                          }\r\n                        })}</td>\r\n                        <td>\r\n                          <LinkContainer to={`/admin/group/${group.ID}/edit`}>\r\n                            <Button variant='light' className='btn-sm'>\r\n                              <i className='fas fa-edit'></i>\r\n                            </Button>\r\n                          </LinkContainer>\r\n\r\n                          <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(group.ID)}>\r\n                            <i className='fas fa-trash'></i>\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            )}\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default GroupListScreen","import { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useParams, useNavigate } from 'react-router'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\r\nimport FormContainer from '../components/UI/FormContainer'\r\nimport { getGroupDetails, updateGroup } from '../store/actions/group-actions'\r\nimport { GROUP_DETAILS_RESET } from \"../constants/groupsConstants\"\r\n\r\n\r\nfunction GroupEditScreen() {\r\n\r\n  const params = useParams();\r\n  const { id: groupId } = params;\r\n\r\n  const [name, setName] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate();\r\n\r\n  const groupDetails = useSelector(state => state.groupDetails)\r\n  const { error, loading, group } = groupDetails\r\n\r\n  const groupUpdate = useSelector(state => state.groupUpdate)\r\n  const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = groupUpdate\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (successUpdate) {\r\n      dispatch({ type: GROUP_DETAILS_RESET })\r\n      navigate('/admin/grouplist')\r\n    } else {\r\n      if (!group.group_name || group.ID !== Number(groupId)) {\r\n        dispatch(getGroupDetails(groupId))\r\n      } else {\r\n        setName(group.group_name)\r\n      }\r\n    }\r\n\r\n\r\n\r\n  }, [dispatch, group, groupId, navigate, successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateGroup({\r\n      id: groupId,\r\n      name,\r\n    }))\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Link to='/admin/grouplist'>\r\n        Go Back\r\n      </Link>\r\n\r\n      <FormContainer>\r\n        <h1>Edycja grupy</h1>\r\n        {loadingUpdate && <LoadingSpinner />}\r\n        {errorUpdate && <p>Błąd: {errorUpdate}</p>}\r\n\r\n        {loading ? <LoadingSpinner /> : error ? <p>Błąd: {error}</p>\r\n          : (\r\n            <Form onSubmit={submitHandler}>\r\n\r\n              <Form.Group controlId='name'>\r\n                <Form.Label>Nazwa</Form.Label>\r\n                <Form.Control\r\n\r\n                  type='name'\r\n                  placeholder='Wpisz nazwę'\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                >\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Button type='submit' variant='primary'>\r\n                Zaktualizuj\r\n              </Button>\r\n\r\n            </Form>\r\n          )}\r\n\r\n      </FormContainer >\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GroupEditScreen","import { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useNavigate } from 'react-router'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\r\nimport FormContainer from '../components/UI/FormContainer'\r\nimport { createGroup } from '../store/actions/group-actions'\r\nimport { GROUP_CREATE_RESET } from \"../constants/groupsConstants\"\r\nimport { listUsers } from '../store/actions/user-actions'\r\n\r\n\r\nfunction GroupCreateScreen() {\r\n\r\n  const [searchUser, setSearchUser] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [usersGroup, setUsersGroup] = useState([])\r\n\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate();\r\n\r\n  const userList = useSelector(state => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const groupCreate = useSelector(state => state.groupCreate)\r\n  const { loading: loadingCreate, error: errorCreate, success: successCreate } = groupCreate\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch(listUsers())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: GROUP_CREATE_RESET })\r\n    if (userInfo && userInfo.isAdmin) {\r\n    } else {\r\n      navigate('/login')\r\n    }\r\n\r\n    if (typeof users !== \"undefined\") {\r\n      if (users.length) {\r\n        setUsersGroup(new Array(users.length).fill(false))\r\n      }\r\n    }\r\n\r\n    if (successCreate) {\r\n      navigate('/admin/grouplist')\r\n    }\r\n\r\n\r\n\r\n  }, [dispatch, userInfo, successCreate, navigate, JSON.stringify(users)])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    const users = addUsersToGroup()\r\n    if (name) {\r\n      dispatch(createGroup({\r\n        name,\r\n        users\r\n      }))\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const handleOnChange = (position) => {\r\n    const updatedUsersGroup = usersGroup.map((item, index) =>\r\n      index === position ? !item : item\r\n    );\r\n\r\n    setUsersGroup(updatedUsersGroup)\r\n  }\r\n\r\n  const addUsersToGroup = () => {\r\n    const tempUsersGroup = [...usersGroup];\r\n    const tempUsers = [...users];\r\n\r\n    const array = tempUsersGroup.map((item, index) => item &&\r\n      tempUsers[index].user\r\n    )\r\n    return array.filter(item => item)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Link to='/admin/grouplist'>\r\n        Powrót\r\n      </Link>\r\n\r\n      <FormContainer>\r\n        <h1>Tworzenie grupy</h1>\r\n        {loadingCreate && <LoadingSpinner />}\r\n        {errorCreate && <p>Błąd: {errorCreate}</p>}\r\n\r\n        {loading ? <LoadingSpinner /> : error ? <p>Błąd: {error}</p>\r\n          : (\r\n            <Form onSubmit={submitHandler}>\r\n\r\n              <Form.Group controlId='name'>\r\n                <Form.Label>Nazwa</Form.Label>\r\n                <Form.Control\r\n                  type='name'\r\n                  placeholder='Wpisz nazwę'\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                >\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Label style={{ marginTop: '10px' }}>Użytkownicy</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Wyszukaj użytkownika...'\r\n                onChange={(e) => setSearchUser(e.target.value)}\r\n                style={{ marginBottom: '10px' }}\r\n              />\r\n              <Form.Group controlId='users'>\r\n                {\r\n                  users.filter(val => {\r\n                    if (searchUser == \"\") {\r\n                      return val\r\n                    } else if (val.user.email.toLowerCase().includes(searchUser.toLowerCase())) {\r\n                      return val\r\n                    }\r\n                  }).map((user, index) =>\r\n                    <Form.Check\r\n                      key={user.user.id}\r\n                      id={user.user.id}\r\n                      type='checkbox'\r\n                      value={user.user.email}\r\n                      label={user.user.email}\r\n                      checked={usersGroup[index]}\r\n                      onChange={(e) => handleOnChange(index, e)}\r\n                    >\r\n                    </Form.Check>)\r\n\r\n                }\r\n              </Form.Group>\r\n\r\n              <Button type='submit' variant='primary'>\r\n                Stwórz grupę\r\n              </Button>\r\n\r\n            </Form>\r\n          )}\r\n\r\n      </FormContainer >\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GroupCreateScreen","import { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport { Table, Button, Row, Col, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\r\nimport { Container } from 'react-bootstrap'\r\nimport { listPolls, deletePoll, downloadReport } from '../store/actions/poll-actions'\r\n\r\nfunction PollListScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n\r\n  const [searchPoll, setSearchPoll] = useState('')\r\n  const [searchUser, setSearchUser] = useState('')\r\n\r\n  const pollList = useSelector(state => state.pollList);\r\n  const { error, polls, loading } = pollList;\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const pollDelete = useSelector(state => state.pollDelete)\r\n  const { loading: loadingDelete, error: errorDelete, success: successDelete } = pollDelete\r\n\r\n  useEffect(() => {\r\n\r\n    if (!userInfo.isAdmin) {\r\n      navigate('/login')\r\n    }\r\n\r\n    dispatch(listPolls())\r\n\r\n  }, [dispatch, userInfo, navigate, successDelete])\r\n\r\n\r\n  const deleteHandler = (id) => {\r\n\r\n    if (window.confirm('Jesteś pewny, że chcesz usunąć tą ankietę ?')) {\r\n      dispatch(deletePoll(id))\r\n\r\n    }\r\n  }\r\n\r\n  const createPollHandler = () => {\r\n    navigate('/polls/create-poll')\r\n  }\r\n\r\n  const displayAnswers = (question) => {\r\n\r\n    switch (true) {\r\n      case question.question.is_single_choice: {\r\n        return (\r\n          <tr >\r\n            <td style={{ height: '200px', padding: '0' }}><Table style={{ margin: '0', height: '100%' }} striped bordered hover>\r\n              <tbody>\r\n                {question.answers.map(answer => (\r\n                  <tr\r\n                    key={answer.ID}>\r\n                    <td style={answer.is_marked ? { color: 'green' } : { color: 'red' }}>{answer.answer}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table></td>\r\n          </tr >)\r\n\r\n\r\n      }\r\n      case question.question.is_multi_choice: {\r\n        return (\r\n          <tr >\r\n            <td style={{ height: '200px', padding: '0' }}><Table style={{ margin: '0', height: '100%' }} striped bordered hover>\r\n              <tbody>\r\n                {question.answers.map(answer => (\r\n                  <tr\r\n                    key={answer.ID}>\r\n                    <td style={answer.is_marked ? { color: 'green' } : { color: 'red' }}>{answer.answer}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table></td>\r\n          </tr >)\r\n      };\r\n      case question.question.is_open: {\r\n        return (\r\n          <tr >\r\n            {question.answers.map(answer => (\r\n              <td style={{ height: '200px', display: 'flex', justifyContent: 'center', alignItems: 'center' }} key={answer.ID}>{answer.open_answer}</td>\r\n            ))}\r\n          </tr >)\r\n      }\r\n      case question.question.is_date_choice: {\r\n        return (\r\n          <tr >\r\n            {question.answers.map(answer => (\r\n              <td style={{ height: '200px', display: 'flex', justifyContent: 'center', alignItems: 'center' }} key={answer.ID}>{answer.date_answer}</td>\r\n            ))}\r\n          </tr >\r\n        )\r\n      }\r\n      default: {\r\n        return question.question\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <Row className='align-items-center'>\r\n          <Col>\r\n            <h1>Ankiety</h1>\r\n          </Col>\r\n\r\n          <Col className='text-right' style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n            <Button style={{ marginRight: '10px' }} onClick={createPollHandler}>\r\n              <i className='fas fa-plus'></i>\r\n              Stwórz ankiętę\r\n            </Button>\r\n\r\n          </Col>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Wyszukaj ankietę...'\r\n            onChange={(e) => setSearchPoll(e.target.value)}\r\n            style={{ margin: '20px 0' }}\r\n          />\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Wyszukaj użytkownika...'\r\n            onChange={(e) => setSearchUser(e.target.value)}\r\n            style={{ marginBottom: '10px' }}\r\n          />\r\n        </Row>\r\n\r\n        {loadingDelete && <LoadingSpinner />}\r\n        {errorDelete && <p>Błąd: {errorDelete}</p>}\r\n\r\n\r\n\r\n        {loading\r\n          ? (<LoadingSpinner />)\r\n          : error\r\n            ? (<p>Błąd: {error}</p>)\r\n            : (\r\n              <div>\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>ID</th>\r\n                      <th>NAZWA</th>\r\n                      <th>OPIS</th>\r\n                      <th>TERMIN</th>\r\n                      <th>ZAKOŃCZONY</th>\r\n                      <th>GRUPY</th>\r\n                      <th>UŻYTKOWNIK</th>\r\n                      <th>PYTANIA</th>\r\n                      <th>ODPOWIEDZI</th>\r\n                      <th></th>\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  <tbody>\r\n                    {polls.filter(val => {\r\n                      if (searchPoll == \"\" && searchUser == \"\") {\r\n                        return val\r\n                      } else if (val.name.toLowerCase().includes(searchPoll.toLowerCase()) && val.user.email.toLowerCase().includes(searchUser.toLowerCase())) {\r\n                        return val\r\n\r\n                      }\r\n                    }).map(poll => (\r\n                      <>\r\n                        <tr key={poll.id}>\r\n                          <td>{poll.id}</td>\r\n                          <td>{poll.name}</td>\r\n                          <td>{poll.description}</td>\r\n                          <td>\r\n                            <p>{poll.deadline.slice(0, 10)}</p>\r\n                            <p>{poll.deadline.slice(11, 19)}</p>\r\n                          </td>\r\n                          <td>{poll.isFinished ? (\r\n                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                          ) : (\r\n                            <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                          )}</td>\r\n                          <td>{poll.groups.map(group => (\r\n                            <p key={group.ID}>{group.group_name}</p>\r\n                          ))}</td>\r\n                          <td>{poll.user.email}</td>\r\n                          <td style={{ padding: '0' }}>\r\n                            <Table style={{ margin: '0' }} striped bordered hover>\r\n                              <tbody>\r\n                                {poll.questions.map(question => (\r\n                                  <tr\r\n                                    key={question.question.ID}>\r\n                                    <td style={{ height: '200px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>{question.question.question}</td>\r\n                                  </tr>\r\n                                ))}\r\n                              </tbody>\r\n                            </Table>\r\n                          </td>\r\n                          <td style={{ padding: '0' }}>\r\n                            {!poll.isFinished ? <p style={{ padding: '5px' }}>Ten użytkownik nie wypełnił jeszcze ankiety</p> :\r\n                              <Table style={{ margin: '0' }} striped bordered hover>\r\n                                <tbody>\r\n                                  {poll.questions.map(question =>\r\n                                    displayAnswers(question)\r\n                                  )\r\n                                  }\r\n                                </tbody>\r\n                              </Table>\r\n                            }\r\n                          </td>\r\n                          <td>\r\n                            <Button variant='dark' className='btn-sm' onClick={() => dispatch(downloadReport(poll.name, true))}>\r\n                              <i className='fas fa-file'></i>\r\n                            </Button>\r\n                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(poll.id)}>\r\n                              <i className='fas fa-trash'></i>\r\n                            </Button>\r\n                          </td>\r\n                        </tr>\r\n                      </>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            )}\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default PollListScreen","export default __webpack_public_path__ + \"static/media/logo-weii.3b7abcc3.png\";","import classes from './Footer.module.css'\r\nimport logoWeii from '../../../images/logo-weii.png'\r\n\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div className={classes[\"footer-container\"]}>\r\n        <div className={classes[\"logo-weii\"]}>\r\n          <img src={logoWeii} alt=\"logo-weii\" />\r\n        </div>\r\n        <div className={classes[\"authors-container\"]}>\r\n          <h3>Autor:</h3>\r\n          <ul className={classes.authors}>\r\n            <li>Marciniak Marcin</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { logout } from '../../../store/actions/user-actions';\r\n\r\nimport classes from './Navigation.module.css'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\nconst Navigation = () => {\r\n\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userGroupList = useSelector(state => state.userGroupList);\r\n  const { userGroups } = userGroupList;\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [isEmployee, setIsEmployee] = useState(false)\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n    navigate('/');\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (userGroups) {\r\n      const employeeArray = userGroups.some(group => group.groupName === 'Pracownik')\r\n      if (employeeArray) {\r\n        setIsEmployee(true)\r\n      }\r\n    }\r\n  }, [JSON.stringify(userGroups)])\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Navbar className={classes['color-nav']} variant=\"light\" expand=\"lg\" collapseOnSelect>\r\n      <Container>\r\n        <LinkContainer to='/'>\r\n          <Navbar.Brand>Ankiety</Navbar.Brand>\r\n        </LinkContainer>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\" style={{ justifyContent: 'flex-end', marginRight: '100px' }}>\r\n          <Nav className=\"ml-auto\">\r\n            {userInfo ? (\r\n              <NavDropdown title={userInfo.name} id='username'>\r\n                <LinkContainer to='/profile'>\r\n                  <NavDropdown.Item>Profil</NavDropdown.Item>\r\n                </LinkContainer>\r\n                {!userInfo.isAdmin && <LinkContainer to='/polls'>\r\n                  <NavDropdown.Item>Moje ankiety</NavDropdown.Item>\r\n                </LinkContainer>}\r\n                {(isEmployee && !userInfo.isAdmin) && <LinkContainer to='/polls/create-poll'>\r\n                  <NavDropdown.Item>Tworzenie ankiety</NavDropdown.Item>\r\n                </LinkContainer>}\r\n\r\n                <NavDropdown.Item onClick={logoutHandler}>Wyloguj się</NavDropdown.Item>\r\n\r\n              </NavDropdown>\r\n            ) : (\r\n              <>\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link><i className=\"fas fa-user\"></i>Logowanie</Nav.Link>\r\n                </LinkContainer>\r\n                <LinkContainer to='/register'>\r\n                  <Nav.Link><i className=\"fas fa-user\"></i>Rejestracja</Nav.Link>\r\n                </LinkContainer>\r\n              </>\r\n\r\n            )}\r\n\r\n\r\n            {userInfo && userInfo.isAdmin && (\r\n              <NavDropdown title='Admin' id='adminmenue'>\r\n                <LinkContainer to='/admin/userlist'>\r\n                  <NavDropdown.Item>Użytkownicy</NavDropdown.Item>\r\n                </LinkContainer>\r\n\r\n                <LinkContainer to='/admin/grouplist'>\r\n                  <NavDropdown.Item>Grupy</NavDropdown.Item>\r\n                </LinkContainer>\r\n\r\n                <LinkContainer to='/admin/polllist'>\r\n                  <NavDropdown.Item>Ankiety</NavDropdown.Item>\r\n                </LinkContainer>\r\n\r\n              </NavDropdown>\r\n            )}\r\n\r\n\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Navigation;","import { Container } from \"react-bootstrap\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Navigation from \"../Nav/Navigation\";\r\nimport classes from './Layout.module.css'\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <div className={classes.page}>\r\n      <Navigation />\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          {children}\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Layout;","import { Route, Routes } from 'react-router';\nimport AllPollsPage from './pages/AllPollsPage';\nimport HomePage from './pages/HomePage';\nimport PollPage from './pages/PollPage';\nimport LoginPage from './pages/LoginPage';\nimport RegisterPage from './pages/RegisterPage';\nimport ProfilePage from './pages/ProfilePage';\nimport PollFinishedPage from './pages/PollFinishedPage'\nimport PollFilledPage from './pages/PollFilledPage'\nimport CreatePollPage from './pages/CreatePollPage';\nimport PollCreatedPage from './pages/PollCreatedPage';\nimport UserListScreen from './pages/UserListScreen';\nimport UserEditScreen from './pages/UserEditScreen';\nimport GroupListScreen from './pages/GroupListScreen';\n\nimport GroupEditScreen from './pages/GroupEditScreen';\nimport GroupCreateScreen from './pages/GroupCreateScreen';\nimport PollListScreen from './pages/PollListScreen';\nimport Layout from './components/Layout/Layout/Layout';\n\nfunction App() {\n  return (\n    <>\n      <Layout>\n        <Routes>\n          <Route path=\"/\" element={<HomePage />}></Route>\n          <Route path=\"/polls\" element={<AllPollsPage />}></Route>\n          <Route path=\"/polls/:pollId\" element={<PollPage />}></Route>\n          <Route path=\"/polls/:pollId/finished-poll\" element={<PollFinishedPage />}></Route>\n          <Route path=\"/polls/:pollId/filled-poll\" element={<PollFilledPage />}></Route>\n          <Route path=\"/polls/create-poll\" element={<CreatePollPage />}></Route>\n          <Route path=\"/polls/created-poll\" element={<PollCreatedPage />}></Route>\n          <Route path=\"/login\" element={<LoginPage />}></Route>\n          <Route path=\"/register\" element={<RegisterPage />}></Route>\n          <Route path=\"/profile\" element={<ProfilePage />}></Route>\n          <Route path=\"/admin/userlist\" element={<UserListScreen />}></Route>\n          <Route path=\"/admin/user/:id/edit\" element={<UserEditScreen />}></Route>\n          <Route path=\"/admin/grouplist\" element={<GroupListScreen />}></Route>\n          <Route path=\"/admin/group/create\" element={<GroupCreateScreen />}></Route>\n          <Route path=\"/admin/group/:id/edit\" element={<GroupEditScreen />}></Route>\n          <Route path=\"/admin/polllist\" element={<PollListScreen />}></Route>\n        </Routes>\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/user-reducer';\r\nimport { pollListReducer, pollReducer, pollDescriptionCreatePollReducer, sentPollReducer, pollDeleteReducer } from './reducers/poll-reducer';\r\nimport { userGroupListReducer } from './reducers/userGroup-reducer';\r\nimport { userPollListReducer } from './reducers/userPoll-reducer';\r\nimport { answersByPollIdReducer, answersQuestionCreatePoll, questionsAndAnswersCreatePoll } from './reducers/answer-reducer';\r\nimport { groupListReducer, groupDeleteReducer, groupDetailsReducer, groupUpdateReducer, groupCreateReducer } from './reducers/group-reducer';\r\n\r\n\r\nexport const reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n\r\n  pollList: pollListReducer,\r\n  pollForm: pollReducer,\r\n  pollDescriptionCreatePoll: pollDescriptionCreatePollReducer,\r\n  sentPoll: sentPollReducer,\r\n  pollDelete: pollDeleteReducer,\r\n\r\n\r\n  userGroupList: userGroupListReducer,\r\n\r\n  userPollList: userPollListReducer,\r\n\r\n  answersByPollId: answersByPollIdReducer,\r\n  answersCreatePoll: answersQuestionCreatePoll,\r\n  allQuestionsAnswersCreatePoll: questionsAndAnswersCreatePoll,\r\n\r\n  allGroupList: groupListReducer,\r\n  groupDelete: groupDeleteReducer,\r\n  groupDetails: groupDetailsReducer,\r\n  groupUpdate: groupUpdateReducer,\r\n  groupCreate: groupCreateReducer,\r\n})\r\n\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n  JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst userGroupsFromStorage = localStorage.getItem('userGroups') ?\r\n  JSON.parse(localStorage.getItem('userGroups')) : null\r\n\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n  userGroupList: { userGroups: userGroupsFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n\r\n\r\nexport default store;","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n\r\n  USER_LOGOUT,\r\n\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET,\r\n} from \"../../constants/userConstants\";\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case USER_LOGOUT:\r\n      return {}\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case USER_LOGOUT:\r\n      return {}\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} }\r\n\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true }\r\n\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload }\r\n\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {}\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true }\r\n\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload }\r\n\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case USER_LIST_RESET:\r\n      return { users: [] }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true }\r\n\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case USER_UPDATE_RESET:\r\n      return { user: {} }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  POLL_LIST_REQUEST,\r\n  POLL_LIST_SUCCESS,\r\n  POLL_LIST_FAIL,\r\n  POLL_LIST_RESET,\r\n\r\n  POLL_REQUEST,\r\n  POLL_SUCCESS,\r\n  POLL_FAIL,\r\n  POLL_RESET,\r\n\r\n  SENT_CREATED_POLL_REQUEST,\r\n  SENT_CREATED_POLL_SUCCESS,\r\n  SENT_CREATED_POLL_FAIL,\r\n\r\n  POLL_DESCRIPTION_CREATE_POLL_REQUEST,\r\n  POLL_DESCRIPTION_CREATE_POLL_SUCCESS,\r\n  POLL_DESCRIPTION_CREATE_POLL_FAIL,\r\n  POLL_DESCRIPTION_CREATE_POLL_RESET,\r\n\r\n  POLL_DELETE_REQUEST,\r\n  POLL_DELETE_SUCCESS,\r\n  POLL_DELETE_FAIL,\r\n} from '../../constants/pollConstants';\r\n\r\n\r\nexport const pollListReducer = (state = { polls: [] }, action) => {\r\n  switch (action.type) {\r\n    case POLL_LIST_REQUEST:\r\n      return { loading: true, polls: [] }\r\n\r\n    case POLL_LIST_SUCCESS:\r\n      return { loading: false, polls: action.payload }\r\n\r\n    case POLL_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case POLL_LIST_RESET:\r\n      return { polls: [] }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const pollReducer = (state = { poll: {} }, action) => {\r\n  switch (action.type) {\r\n    case POLL_REQUEST:\r\n      return { loading: true, poll: {} }\r\n\r\n    case POLL_SUCCESS:\r\n      return { loading: false, poll: action.payload }\r\n\r\n    case POLL_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case POLL_RESET:\r\n      return { poll: {} }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const pollDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case POLL_DELETE_REQUEST:\r\n      return { loading: true }\r\n\r\n    case POLL_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n\r\n    case POLL_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const sentPollReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case SENT_CREATED_POLL_REQUEST:\r\n      return { loading: true }\r\n\r\n    case SENT_CREATED_POLL_SUCCESS:\r\n      return { loading: false }\r\n\r\n    case SENT_CREATED_POLL_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const pollDescriptionCreatePollReducer = (state = { pollDescription: {} }, action) => {\r\n  switch (action.type) {\r\n    case POLL_DESCRIPTION_CREATE_POLL_REQUEST:\r\n      return { loading: true, pollDescription: {} }\r\n\r\n    case POLL_DESCRIPTION_CREATE_POLL_SUCCESS:\r\n      return { loading: false, pollDescription: action.payload }\r\n\r\n    case POLL_DESCRIPTION_CREATE_POLL_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case POLL_DESCRIPTION_CREATE_POLL_RESET:\r\n      return { pollDescription: {} }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  USER_GROUP_LIST_REQUEST,\r\n  USER_GROUP_LIST_SUCCESS,\r\n  USER_GROUP_LIST_FAIL,\r\n  USER_GROUP_LIST_RESET,\r\n} from \"../../constants/userGroupConstants\";\r\n\r\nexport const userGroupListReducer = (state = { userGroups: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_GROUP_LIST_REQUEST:\r\n      return { loading: true, userGroups: [] }\r\n\r\n    case USER_GROUP_LIST_SUCCESS:\r\n      return { loading: false, userGroups: action.payload }\r\n\r\n    case USER_GROUP_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case USER_GROUP_LIST_RESET:\r\n      return { userGroups: [] }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  USER_POLL_LIST_REQUEST,\r\n  USER_POLL_LIST_SUCCESS,\r\n  USER_POLL_LIST_FAIL,\r\n  USER_POLL_LIST_RESET,\r\n} from \"../../constants/userPollConstants\";\r\n\r\nexport const userPollListReducer = (state = { userPolls: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_POLL_LIST_REQUEST:\r\n      return { loading: true, userPolls: [] }\r\n\r\n    case USER_POLL_LIST_SUCCESS:\r\n      return { loading: false, userPolls: action.payload }\r\n\r\n    case USER_POLL_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case USER_POLL_LIST_RESET:\r\n      return { userPolls: [] }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  SENT_ANSWER_FROM_USER_REQUEST,\r\n  SENT_ANSWER_FROM_USER_SUCCESS,\r\n  SENT_ANSWER_FROM_USER_FAIL,\r\n\r\n  ANSWER_BY_POLL_ID_REQUEST,\r\n  ANSWER_BY_POLL_ID_SUCCESS,\r\n  ANSWER_BY_POLL_ID_FAIL,\r\n  ANSWER_BY_POLL_ID_RESET,\r\n\r\n  ANSWER_QUESTION_CREATE_POLL_REQUEST,\r\n  ANSWER_QUESTION_CREATE_POLL_SUCCESS,\r\n  ANSWER_QUESTION_CREATE_POLL_FAIL,\r\n  ANSWER_QUESTION_CREATE_POLL_RESET,\r\n\r\n  QUESTIONS_ANSWERS_CREATE_POLL_REQUEST,\r\n  QUESTIONS_ANSWERS_CREATE_POLL_SUCCESS,\r\n  QUESTIONS_ANSWERS_CREATE_POLL_FAIL,\r\n  QUESTIONS_ANSWERS_CREATE_POLL_RESET,\r\n} from '../../constants/answerConstants';\r\n\r\n\r\n\r\n\r\nexport const sentAnswerFromUserReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SENT_ANSWER_FROM_USER_REQUEST:\r\n      return { loading: true }\r\n\r\n    case SENT_ANSWER_FROM_USER_SUCCESS:\r\n      return { loading: false, success: true, }\r\n\r\n    case SENT_ANSWER_FROM_USER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const answersByPollIdReducer = (state = { answers: [] }, action) => {\r\n  switch (action.type) {\r\n    case ANSWER_BY_POLL_ID_REQUEST:\r\n      return { loading: true }\r\n\r\n    case ANSWER_BY_POLL_ID_SUCCESS:\r\n      return { loading: false, answers: action.payload, }\r\n\r\n    case ANSWER_BY_POLL_ID_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case ANSWER_BY_POLL_ID_RESET:\r\n      return { answers: [] }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const answersQuestionCreatePoll = (state = { answersQuestion: [] }, action) => {\r\n  switch (action.type) {\r\n    case ANSWER_QUESTION_CREATE_POLL_REQUEST:\r\n      return { loading: true }\r\n\r\n    case ANSWER_QUESTION_CREATE_POLL_SUCCESS:\r\n      return { loading: false, answersQuestion: action.payload, }\r\n\r\n    case ANSWER_QUESTION_CREATE_POLL_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case ANSWER_QUESTION_CREATE_POLL_RESET:\r\n      return { answersQuestion: [] }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const questionsAndAnswersCreatePoll = (state = { questionsAnswers: [] }, action) => {\r\n  switch (action.type) {\r\n    case QUESTIONS_ANSWERS_CREATE_POLL_REQUEST:\r\n      return { loading: true }\r\n\r\n    case QUESTIONS_ANSWERS_CREATE_POLL_SUCCESS:\r\n      return { loading: false, questionsAnswers: action.payload, }\r\n\r\n    case QUESTIONS_ANSWERS_CREATE_POLL_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case QUESTIONS_ANSWERS_CREATE_POLL_RESET:\r\n      return { questionsAnswers: [] }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  GROUP_LIST_REQUEST,\r\n  GROUP_LIST_SUCCESS,\r\n  GROUP_LIST_FAIL,\r\n  GROUP_LIST_RESET,\r\n\r\n  GROUP_DETAILS_REQUEST,\r\n  GROUP_DETAILS_SUCCESS,\r\n  GROUP_DETAILS_FAIL,\r\n  GROUP_DETAILS_RESET,\r\n\r\n  GROUP_CREATE_REQUEST,\r\n  GROUP_CREATE_SUCCESS,\r\n  GROUP_CREATE_FAIL,\r\n  GROUP_CREATE_RESET,\r\n\r\n  GROUP_UPDATE_REQUEST,\r\n  GROUP_UPDATE_SUCCESS,\r\n  GROUP_UPDATE_FAIL,\r\n  GROUP_UPDATE_RESET,\r\n\r\n  GROUP_DELETE_REQUEST,\r\n  GROUP_DELETE_SUCCESS,\r\n  GROUP_DELETE_FAIL\r\n} from \"../../constants/groupsConstants\"\r\n\r\nexport const groupListReducer = (state = { groups: [] }, action) => {\r\n  switch (action.type) {\r\n    case GROUP_LIST_REQUEST:\r\n      return { loading: true }\r\n\r\n    case GROUP_LIST_SUCCESS:\r\n      return { loading: false, groups: action.payload, }\r\n\r\n    case GROUP_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case GROUP_LIST_RESET:\r\n      return { groups: [] }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const groupDetailsReducer = (state = { group: {} }, action) => {\r\n  switch (action.type) {\r\n    case GROUP_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n\r\n    case GROUP_DETAILS_SUCCESS:\r\n      return { loading: false, group: action.payload }\r\n\r\n    case GROUP_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case GROUP_DETAILS_RESET:\r\n      return { user: {} }\r\n\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const groupCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case GROUP_CREATE_REQUEST:\r\n      return { loading: true }\r\n\r\n    case GROUP_CREATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n\r\n    case GROUP_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case GROUP_CREATE_RESET:\r\n      return {}\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const groupUpdateReducer = (state = { group: {} }, action) => {\r\n  switch (action.type) {\r\n    case GROUP_UPDATE_REQUEST:\r\n      return { loading: true }\r\n\r\n    case GROUP_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, group: action.payload }\r\n\r\n    case GROUP_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case GROUP_UPDATE_RESET:\r\n      return { group: {} }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const groupDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case GROUP_DELETE_REQUEST:\r\n      return { loading: true }\r\n\r\n    case GROUP_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n\r\n    case GROUP_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './store/store.js';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"about\":\"About_about__m-DbZ\",\"about-text\":\"About_about-text__3oZeo\",\"about-1\":\"About_about-1__j5PF8\",\"about-2\":\"About_about-2__128-p\",\"about-image-1\":\"About_about-image-1__13vZ5\",\"about-image-2\":\"About_about-image-2__1qcYs\",\"about-text-2\":\"About_about-text-2__BGC1d\",\"about-text-1\":\"About_about-text-1__1HKS8\",\"about-text-p2\":\"About_about-text-p2__22ZDu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"poll-container\":\"PollForm_poll-container__1cr_m\",\"sub-nav\":\"PollForm_sub-nav__3Uul5\",\"poll-question\":\"PollForm_poll-question__G4JlG\",\"poll-question-content\":\"PollForm_poll-question-content__pRGm1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page-container-login\":\"Login_page-container-login__3y5S7\",\"form\":\"Login_form__29YWs\",\"form-content\":\"Login_form-content__ey1mZ\",\"error\":\"Login_error__f1XZQ\",\"info\":\"Login_info__Nokqn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page-container-login\":\"Register_page-container-login__3kLHG\",\"form\":\"Register_form__FwWVa\",\"form-content\":\"Register_form-content__3SgT2\",\"error\":\"Register_error__1KVaJ\",\"info\":\"Register_info__126_s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"poll-container\":\"PollQuestionAnswers_poll-container__18bdT\",\"sub-nav\":\"PollQuestionAnswers_sub-nav__wTIzJ\",\"sub-menu\":\"PollQuestionAnswers_sub-menu__1i6xm\",\"sub-button\":\"PollQuestionAnswers_sub-button__1dza8\",\"yellow-button\":\"PollQuestionAnswers_yellow-button__1yjGQ\",\"poll-question\":\"PollQuestionAnswers_poll-question__3f8Vz\",\"poll-question-content\":\"PollQuestionAnswers_poll-question-content__IA7mR\",\"question-content\":\"PollQuestionAnswers_question-content__yljjg\",\"answers\":\"PollQuestionAnswers_answers__2wohy\",\"question-image\":\"PollQuestionAnswers_question-image__lxs7i\",\"question-menu\":\"PollQuestionAnswers_question-menu__htHDZ\",\"type-answer\":\"PollQuestionAnswers_type-answer__13XLp\",\"add-image\":\"PollQuestionAnswers_add-image__1v-W1\",\"fa-image\":\"PollQuestionAnswers_fa-image__3jV1I\",\"add-question\":\"PollQuestionAnswers_add-question__1v5EY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page-container-login\":\"Profile_page-container-login__1Gw3q\",\"form\":\"Profile_form__2ANw5\",\"form-content\":\"Profile_form-content__2B3SC\",\"error\":\"Profile_error__3sAMU\",\"info\":\"Profile_info__1bMrD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer-container\":\"Footer_footer-container__3F2Hk\",\"logo-weii\":\"Footer_logo-weii__1gJ6m\",\"authors-container\":\"Footer_authors-container__64Qqx\",\"form-content\":\"Footer_form-content__2RdWA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header-container\":\"Header_header-container__1eyRk\",\"button-wide\":\"Header_button-wide__10rML\",\"header-content\":\"Header_header-content__1uvYw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"poll-desc\":\"PollDescription_poll-desc__2o8I-\",\"poll-description-menu\":\"PollDescription_poll-description-menu__3wX7t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"poll-container\":\"CreatePoll_poll-container__1zmBb\",\"sub-nav\":\"CreatePoll_sub-nav__1Ik7b\",\"sub-menu\":\"CreatePoll_sub-menu__34ACE\",\"sub-button\":\"CreatePoll_sub-button__2CzhY\",\"yellow-button\":\"CreatePoll_yellow-button__3qnNF\",\"poll-question\":\"CreatePoll_poll-question___4izW\",\"poll-question-content\":\"CreatePoll_poll-question-content__1dmWI\",\"question-content\":\"CreatePoll_question-content__20TBh\",\"answers\":\"CreatePoll_answers__1ZIi0\",\"question-image\":\"CreatePoll_question-image__2djXb\",\"question-menu\":\"CreatePoll_question-menu__1CHZw\",\"type-answer\":\"CreatePoll_type-answer__1Qhw3\",\"add-image\":\"CreatePoll_add-image__jcYz6\",\"fa-image\":\"CreatePoll_fa-image__3Rt4G\",\"add-question\":\"CreatePoll_add-question__3TPRH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected-polls\":\"PollList_selected-polls__16yB7\",\"polls\":\"PollList_polls__3W5yV\",\"poll\":\"PollList_poll__1f9oE\",\"margin-top-h2\":\"PollList_margin-top-h2__1No_T\",\"green-text\":\"PollList_green-text__2Vjxs\",\"item\":\"PollList_item__3yvb3\",\"button\":\"PollList_button__2rsax\",\"poll-all\":\"PollList_poll-all__3oMBV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3nku4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-nav\":\"Navigation_color-nav__2R75x\",\"nav\":\"Navigation_nav__2akYh\",\"navbar-nav\":\"Navigation_navbar-nav__J6PuU\",\"navbar-right\":\"Navigation_navbar-right__3FFYG\"};"],"sourceRoot":""}